{"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "bytes32", "name": "oldPassword", "type": "bytes32"}, {"internalType": "bytes32", "name": "newPassword", "type": "bytes32"}], "name": "changePassword", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "password", "type": "bytes32"}], "name": "createAccount", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_address", "type": "address"}, {"internalType": "bytes32", "name": "password", "type": "bytes32"}], "name": "createAccountFor", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "password", "type": "bytes32"}], "name": "deposit", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "getBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "show", "outputs": [{"internalType": "enum Bank.Plan", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "level", "type": "uint256"}, {"internalType": "bytes32", "name": "password", "type": "bytes32"}], "name": "upgrade", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"internalType": "bytes32", "name": "password", "type": "bytes32"}], "name": "withdraw", "outputs": [], "stateMutability": "payable", "type": "function"}], "allSourcePaths": {"0": "contracts/Bank.sol"}, "ast": {"absolutePath": "contracts/Bank.sol", "exportedSymbols": {"Bank": [578], "IBank": [646]}, "id": 579, "license": "GPL-3.0", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "36:23:0"}, {"absolutePath": "contracts/interfaces/IBank.sol", "file": "./interfaces/IBank.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 579, "sourceUnit": 647, "src": "61:32:0", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "Bank", "contractDependencies": [], "contractKind": "contract", "documentation": {"id": 3, "nodeType": "StructuredDocumentation", "src": "95:354:0", "text": " @title Bank Contract.\n @author Anthony (fps) https://github.com/fps8k.\n @dev  The bank itself.\n       Like a typical bank, users deposit and their balances are\n       recorded against their addresses, but the ether is deposited\n       directly into the contract bank.\n       Withdrawals and Transfers cost some tax.\n       Deposits don't."}, "fullyImplemented": true, "id": 578, "linearizedBaseContracts": [578], "name": "Bank", "nameLocation": "461:4:0", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Bank.Plan", "id": 8, "members": [{"id": 4, "name": "Free", "nameLocation": "964:4:0", "nodeType": "EnumValue", "src": "964:4:0"}, {"id": 5, "name": "Basic", "nameLocation": "978:5:0", "nodeType": "EnumValue", "src": "978:5:0"}, {"id": 6, "name": "Pro", "nameLocation": "993:3:0", "nodeType": "EnumValue", "src": "993:3:0"}, {"id": 7, "name": "Ultimate", "nameLocation": "1006:8:0", "nodeType": "EnumValue", "src": "1006:8:0"}], "name": "Plan", "nameLocation": "949:4:0", "nodeType": "EnumDefinition", "src": "944:76:0"}, {"constant": false, "documentation": {"id": 9, "nodeType": "StructuredDocumentation", "src": "1026:51:0", "text": "@dev Mapping user addresses to their passwords."}, "id": 13, "mutability": "mutable", "name": "passwords", "nameLocation": "1118:9:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1082:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}, "typeName": {"id": 12, "keyType": {"id": 10, "name": "address", "nodeType": "ElementaryTypeName", "src": "1090:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1082:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}, "valueType": {"id": 11, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1101:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, "visibility": "private"}, {"constant": false, "documentation": {"id": 14, "nodeType": "StructuredDocumentation", "src": "1133:56:0", "text": "@dev Mapping the plans to their prices for upgrades."}, "id": 19, "mutability": "mutable", "name": "planPrices", "nameLocation": "1227:10:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1194:43:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}, "typeName": {"id": 18, "keyType": {"id": 16, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 15, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "1202:4:0"}, "referencedDeclaration": 8, "src": "1202:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "Mapping", "src": "1194:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}, "valueType": {"id": 17, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1210:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 24, "mutability": "mutable", "name": "userPlan", "nameLocation": "1276:8:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1243:41:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}, "typeName": {"id": 23, "keyType": {"id": 20, "name": "address", "nodeType": "ElementaryTypeName", "src": "1251:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1243:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}, "valueType": {"id": 22, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 21, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "1262:4:0"}, "referencedDeclaration": 8, "src": "1262:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}}, "visibility": "private"}, {"constant": false, "documentation": {"id": 25, "nodeType": "StructuredDocumentation", "src": "1290:39:0", "text": "@dev Mapping plans to their limits."}, "id": 30, "mutability": "mutable", "name": "planLimits", "nameLocation": "1367:10:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1334:43:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}, "typeName": {"id": 29, "keyType": {"id": 27, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 26, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "1342:4:0"}, "referencedDeclaration": 8, "src": "1342:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "Mapping", "src": "1334:24:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}, "valueType": {"id": 28, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1350:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "documentation": {"id": 31, "nodeType": "StructuredDocumentation", "src": "1383:65:0", "text": "@dev Mapping address to the amount of ether in their balance."}, "id": 35, "mutability": "mutable", "name": "balances", "nameLocation": "1489:8:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1453:44:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 34, "keyType": {"id": 32, "name": "address", "nodeType": "ElementaryTypeName", "src": "1461:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "1453:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 33, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1472:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "documentation": {"id": 36, "nodeType": "StructuredDocumentation", "src": "1503:23:0", "text": "@dev Maximum ether."}, "id": 43, "mutability": "mutable", "name": "stretch", "nameLocation": "1544:7:0", "nodeType": "VariableDeclaration", "scope": 578, "src": "1531:40:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 37, "name": "uint", "nodeType": "ElementaryTypeName", "src": "1531:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"expression": {"arguments": [{"id": 40, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1559:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 39, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1559:7:0", "typeDescriptions": {}}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}], "id": 38, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "1554:4:0", "typeDescriptions": {"typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 41, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1554:13:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)"}}, "id": 42, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "max", "nodeType": "MemberAccess", "src": "1554:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"body": {"id": 103, "nodeType": "Block", "src": "1798:435:0", "statements": [{"documentation": "@dev Initialize the `planPrices`.", "expression": {"id": 52, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 47, "name": "planPrices", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1854:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 50, "indexExpression": {"expression": {"id": 48, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "1865:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 49, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Free", "nodeType": "MemberAccess", "referencedDeclaration": 4, "src": "1865:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1854:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 51, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1878:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1854:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "1854:25:0"}, {"expression": {"id": 59, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 54, "name": "planPrices", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1889:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 57, "indexExpression": {"expression": {"id": 55, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "1900:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Basic", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "1900:10:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1889:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e31", "id": 58, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1914:9:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000_by_1", "typeString": "int_const 100000000000000000"}, "value": "0.1"}, "src": "1889:34:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 60, "nodeType": "ExpressionStatement", "src": "1889:34:0"}, {"expression": {"id": 66, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 61, "name": "planPrices", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1933:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 64, "indexExpression": {"expression": {"id": 62, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "1944:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 63, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Pro", "nodeType": "MemberAccess", "referencedDeclaration": 6, "src": "1944:8:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1933:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "302e35", "id": 65, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1956:9:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_500000000000000000_by_1", "typeString": "int_const 500000000000000000"}, "value": "0.5"}, "src": "1933:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 67, "nodeType": "ExpressionStatement", "src": "1933:32:0"}, {"expression": {"id": 73, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 68, "name": "planPrices", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1975:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 71, "indexExpression": {"expression": {"id": 69, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "1986:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 70, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Ultimate", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "1986:13:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1975:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "31", "id": 72, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2003:7:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1"}, "src": "1975:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 74, "nodeType": "ExpressionStatement", "src": "1975:35:0"}, {"documentation": "@dev Initialize the `planLimits`.", "expression": {"id": 80, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 75, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "2067:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 78, "indexExpression": {"expression": {"id": 76, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2078:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 77, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Free", "nodeType": "MemberAccess", "referencedDeclaration": 4, "src": "2078:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2067:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "31", "id": 79, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2091:7:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1"}, "src": "2067:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 81, "nodeType": "ExpressionStatement", "src": "2067:31:0"}, {"expression": {"id": 87, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 82, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "2108:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 85, "indexExpression": {"expression": {"id": 83, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2119:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 84, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Basic", "nodeType": "MemberAccess", "referencedDeclaration": 5, "src": "2119:10:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2108:22:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "35", "id": 86, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2133:7:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_5000000000000000000_by_1", "typeString": "int_const 5000000000000000000"}, "value": "5"}, "src": "2108:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 88, "nodeType": "ExpressionStatement", "src": "2108:32:0"}, {"expression": {"id": 94, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 89, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "2150:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 92, "indexExpression": {"expression": {"id": 90, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2161:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 91, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Pro", "nodeType": "MemberAccess", "referencedDeclaration": 6, "src": "2161:8:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2150:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "3130", "id": 93, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2173:8:0", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_10000000000000000000_by_1", "typeString": "int_const 10000000000000000000"}, "value": "10"}, "src": "2150:31:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 95, "nodeType": "ExpressionStatement", "src": "2150:31:0"}, {"expression": {"id": 101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 96, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "2191:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 99, "indexExpression": {"expression": {"id": 97, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "2202:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Ultimate", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "2202:13:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2191:25:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 100, "name": "stretch", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 43, "src": "2219:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2191:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 102, "nodeType": "ExpressionStatement", "src": "2191:35:0"}]}, "documentation": {"id": 44, "nodeType": "StructuredDocumentation", "src": "1656:123:0", "text": " @dev  Constructor sets the plan limits and the plan prices for the\n       deployment of the contract."}, "id": 104, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 45, "nodeType": "ParameterList", "parameters": [], "src": "1795:2:0"}, "returnParameters": {"id": 46, "nodeType": "ParameterList", "parameters": [], "src": "1798:0:0"}, "scope": 578, "src": "1784:449:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 153, "nodeType": "Block", "src": "2581:497:0", "statements": [{"documentation": "@dev Ensure message sender is not a 0 address.", "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 117, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 111, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2658:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2658:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 115, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2680:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 114, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2672:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 113, "name": "address", "nodeType": "ElementaryTypeName", "src": "2672:7:0", "typeDescriptions": {}}}, "id": 116, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2672:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2658:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c2066726f6d203020616464726573732e", "id": 118, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2684:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3e3a20c2dace6bfce5d82da42afd738d315dd878cab4c7a994c0f39e5cddeace", "typeString": "literal_string \"Call from 0 address.\""}, "value": "Call from 0 address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3e3a20c2dace6bfce5d82da42afd738d315dd878cab4c7a994c0f39e5cddeace", "typeString": "literal_string \"Call from 0 address.\""}], "id": 110, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2650:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 119, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2650:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 120, "nodeType": "ExpressionStatement", "src": "2650:57:0"}, {"documentation": "@dev Ensure caller has no account yet.", "expression": {"arguments": [{"id": 126, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2776:23:0", "subExpression": {"arguments": [{"expression": {"id": 123, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2788:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2788:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 122, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "2777:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 125, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2777:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573732068617320616e206163636f756e742e", "id": 127, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2801:25:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b5626a98c4e57386fa1916cd2708c71404b7d8b99f0e3b38bba395cc57466630", "typeString": "literal_string \"Address has an account.\""}, "value": "Address has an account."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b5626a98c4e57386fa1916cd2708c71404b7d8b99f0e3b38bba395cc57466630", "typeString": "literal_string \"Address has an account.\""}], "id": 121, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2768:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 128, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2768:59:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 129, "nodeType": "ExpressionStatement", "src": "2768:59:0"}, {"documentation": "@dev Ensure the password is indeed 32 in length.", "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 131, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "2906:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 132, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2906:15:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "3332", "id": 133, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2925:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "src": "2906:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070617373776f726420686173682e", "id": 135, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2929:24:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_443ebbf4225bb9ab7efbe96e4f00d34744c6f47613ca29edc656448739ad4dd2", "typeString": "literal_string \"Invalid password hash.\""}, "value": "Invalid password hash."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_443ebbf4225bb9ab7efbe96e4f00d34744c6f47613ca29edc656448739ad4dd2", "typeString": "literal_string \"Invalid password hash.\""}], "id": 130, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2898:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 136, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2898:56:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 137, "nodeType": "ExpressionStatement", "src": "2898:56:0"}, {"documentation": "@dev Create account.", "expression": {"id": 143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 138, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "2997:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 141, "indexExpression": {"expression": {"id": 139, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3007:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3007:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "2997:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 142, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 107, "src": "3021:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "2997:32:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 144, "nodeType": "ExpressionStatement", "src": "2997:32:0"}, {"expression": {"id": 151, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 145, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "3039:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 148, "indexExpression": {"expression": {"id": 146, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3048:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3048:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3039:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 149, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "3062:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 150, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Free", "nodeType": "MemberAccess", "referencedDeclaration": 4, "src": "3062:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "src": "3039:32:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "id": 152, "nodeType": "ExpressionStatement", "src": "3039:32:0"}]}, "documentation": {"id": 105, "nodeType": "StructuredDocumentation", "src": "2239:289:0", "text": " @dev  Creates an account for the caller with password as `password`.\n       The password needs to be hashed off-chain for security.\n       This will also validate that the msg.sender has no accounts already.\n @param password User's preferred password."}, "functionSelector": "fe8ca4af", "id": 154, "implemented": true, "kind": "function", "modifiers": [], "name": "createAccount", "nameLocation": "2542:13:0", "nodeType": "FunctionDefinition", "parameters": {"id": 108, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 107, "mutability": "mutable", "name": "password", "nameLocation": "2564:8:0", "nodeType": "VariableDeclaration", "scope": 154, "src": "2556:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 106, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2556:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "2555:18:0"}, "returnParameters": {"id": 109, "nodeType": "ParameterList", "parameters": [], "src": "2581:0:0"}, "scope": 578, "src": "2533:545:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 212, "nodeType": "Block", "src": "3502:607:0", "statements": [{"documentation": "@dev Ensure message sender is not a 0 address.", "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 169, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 163, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3579:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3579:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 167, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3601:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3593:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 165, "name": "address", "nodeType": "ElementaryTypeName", "src": "3593:7:0", "typeDescriptions": {}}}, "id": 168, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3593:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3579:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c2066726f6d203020616464726573732e", "id": 170, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3605:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3e3a20c2dace6bfce5d82da42afd738d315dd878cab4c7a994c0f39e5cddeace", "typeString": "literal_string \"Call from 0 address.\""}, "value": "Call from 0 address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3e3a20c2dace6bfce5d82da42afd738d315dd878cab4c7a994c0f39e5cddeace", "typeString": "literal_string \"Call from 0 address.\""}], "id": 162, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3571:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 171, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3571:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 172, "nodeType": "ExpressionStatement", "src": "3571:57:0"}, {"documentation": "@dev Ensure address is not a 0 address.", "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 179, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 174, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "3698:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3718:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 176, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3710:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 175, "name": "address", "nodeType": "ElementaryTypeName", "src": "3710:7:0", "typeDescriptions": {}}}, "id": 178, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3710:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3698:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616c6c20746f203020616464726573732e", "id": 180, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3722:20:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5fcc8dc8c21dd4f751f12c955ae229ccf1976ad259d7788033260443ed7bdfca", "typeString": "literal_string \"Call to 0 address.\""}, "value": "Call to 0 address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5fcc8dc8c21dd4f751f12c955ae229ccf1976ad259d7788033260443ed7bdfca", "typeString": "literal_string \"Call to 0 address.\""}], "id": 173, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3690:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 181, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3690:53:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 182, "nodeType": "ExpressionStatement", "src": "3690:53:0"}, {"documentation": "@dev Ensure address has no account yet.", "expression": {"arguments": [{"id": 187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3813:21:0", "subExpression": {"arguments": [{"id": 185, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "3825:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 184, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "3814:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 186, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3814:20:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416464726573732068617320616e206163636f756e742e", "id": 188, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3836:25:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b5626a98c4e57386fa1916cd2708c71404b7d8b99f0e3b38bba395cc57466630", "typeString": "literal_string \"Address has an account.\""}, "value": "Address has an account."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b5626a98c4e57386fa1916cd2708c71404b7d8b99f0e3b38bba395cc57466630", "typeString": "literal_string \"Address has an account.\""}], "id": 183, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3805:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3805:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 190, "nodeType": "ExpressionStatement", "src": "3805:57:0"}, {"documentation": "@dev Ensure the password is indeed 32 in length.", "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 192, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "3941:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 193, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3941:15:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "3332", "id": 194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3960:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "src": "3941:21:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070617373776f726420686173682e", "id": 196, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3964:24:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_443ebbf4225bb9ab7efbe96e4f00d34744c6f47613ca29edc656448739ad4dd2", "typeString": "literal_string \"Invalid password hash.\""}, "value": "Invalid password hash."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_443ebbf4225bb9ab7efbe96e4f00d34744c6f47613ca29edc656448739ad4dd2", "typeString": "literal_string \"Invalid password hash.\""}], "id": 191, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3933:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 197, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3933:56:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "3933:56:0"}, {"documentation": "@dev Create account.", "expression": {"id": 203, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 199, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "4032:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 201, "indexExpression": {"id": 200, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "4042:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4032:19:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 202, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 159, "src": "4054:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4032:30:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 204, "nodeType": "ExpressionStatement", "src": "4032:30:0"}, {"expression": {"id": 210, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 205, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "4072:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 207, "indexExpression": {"id": 206, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 157, "src": "4081:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4072:18:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 208, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "4093:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 209, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Free", "nodeType": "MemberAccess", "referencedDeclaration": 4, "src": "4093:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "src": "4072:30:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "id": 211, "nodeType": "ExpressionStatement", "src": "4072:30:0"}]}, "documentation": {"id": 155, "nodeType": "StructuredDocumentation", "src": "3084:344:0", "text": " @dev  Creates an account for `_address` with password as `password`.\n       The password needs to be hashed off-chain for security.\n       This will also validate that the `_address` has no accounts already.\n @param _address   Address to open account for.\n @param password   User's preferred password."}, "functionSelector": "3fb3188a", "id": 213, "implemented": true, "kind": "function", "modifiers": [], "name": "createAccountFor", "nameLocation": "3442:16:0", "nodeType": "FunctionDefinition", "parameters": {"id": 160, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 157, "mutability": "mutable", "name": "_address", "nameLocation": "3467:8:0", "nodeType": "VariableDeclaration", "scope": 213, "src": "3459:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 156, "name": "address", "nodeType": "ElementaryTypeName", "src": "3459:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 159, "mutability": "mutable", "name": "password", "nameLocation": "3485:8:0", "nodeType": "VariableDeclaration", "scope": 213, "src": "3477:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 158, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3477:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "3458:36:0"}, "returnParameters": {"id": 161, "nodeType": "ParameterList", "parameters": [], "src": "3502:0:0"}, "scope": 578, "src": "3433:676:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 230, "nodeType": "Block", "src": "4336:130:0", "statements": [{"documentation": "@dev Returns true if the address has set a password already.", "expression": {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 221, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "4426:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 223, "indexExpression": {"id": 222, "name": "_address", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 216, "src": "4436:8:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4426:19:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 226, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4457:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 225, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4449:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 224, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4449:7:0", "typeDescriptions": {}}}, "id": 227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4449:10:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4426:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 220, "id": 229, "nodeType": "Return", "src": "4419:40:0"}]}, "documentation": {"id": 214, "nodeType": "StructuredDocumentation", "src": "4115:151:0", "text": " @dev  Returns true if the address already owns an account.\n @param _address Address to check for.\n @return bool."}, "id": 231, "implemented": true, "kind": "function", "modifiers": [], "name": "hasAccount", "nameLocation": "4280:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 217, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 216, "mutability": "mutable", "name": "_address", "nameLocation": "4299:8:0", "nodeType": "VariableDeclaration", "scope": 231, "src": "4291:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 215, "name": "address", "nodeType": "ElementaryTypeName", "src": "4291:7:0", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "4290:18:0"}, "returnParameters": {"id": 220, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 219, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 231, "src": "4330:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 218, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4330:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4329:6:0"}, "scope": 578, "src": "4271:195:0", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 250, "nodeType": "Block", "src": "4672:109:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 239, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4701:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 240, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4701:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 238, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "4690:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 241, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4690:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 242, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4714:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 237, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4682:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 243, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4682:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 244, "nodeType": "ExpressionStatement", "src": "4682:55:0"}, {"expression": {"baseExpression": {"id": 245, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "4754:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 248, "indexExpression": {"expression": {"id": 246, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4763:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 247, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "4763:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4754:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 236, "id": 249, "nodeType": "Return", "src": "4747:27:0"}]}, "documentation": {"id": 232, "nodeType": "StructuredDocumentation", "src": "4472:144:0", "text": " @dev  Returns the balance of the caller.\n       Caller must have an account.\n @return uint256 caller's balance."}, "functionSelector": "12065fe0", "id": 251, "implemented": true, "kind": "function", "modifiers": [], "name": "getBalance", "nameLocation": "4630:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 233, "nodeType": "ParameterList", "parameters": [], "src": "4640:2:0"}, "returnParameters": {"id": 236, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 235, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 251, "src": "4663:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 234, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4663:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4662:9:0"}, "scope": 578, "src": "4621:160:0", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 292, "nodeType": "Block", "src": "4980:262:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 261, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5009:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5009:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 260, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "4998:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4998:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 264, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5022:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 259, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4990:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 265, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4990:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 266, "nodeType": "ExpressionStatement", "src": "4990:55:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 268, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "5063:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 271, "indexExpression": {"expression": {"id": 269, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5073:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5073:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5063:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 272, "name": "oldPassword", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "5088:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5063:36:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672070617373776f72642e", "id": 274, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5101:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}, "value": "Wrong password."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}], "id": 267, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5055:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5055:64:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 276, "nodeType": "ExpressionStatement", "src": "5055:64:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 278, "name": "newPassword", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 256, "src": "5137:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5137:18:0", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "3332", "id": 280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5159:2:0", "typeDescriptions": {"typeIdentifier": "t_rational_32_by_1", "typeString": "int_const 32"}, "value": "32"}, "src": "5137:24:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070617373776f7264206c656e6774682e", "id": 282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5163:26:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e45fbf625f01830bc442799ec99c490c886485ad9eca09612d4ad08fd84622e7", "typeString": "literal_string \"Invalid password length.\""}, "value": "Invalid password length."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e45fbf625f01830bc442799ec99c490c886485ad9eca09612d4ad08fd84622e7", "typeString": "literal_string \"Invalid password length.\""}], "id": 277, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5129:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 283, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5129:61:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 284, "nodeType": "ExpressionStatement", "src": "5129:61:0"}, {"expression": {"id": 290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 285, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "5200:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 288, "indexExpression": {"expression": {"id": 286, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5210:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5210:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5200:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 289, "name": "newPassword", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 256, "src": "5224:11:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5200:35:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 291, "nodeType": "ExpressionStatement", "src": "5200:35:0"}]}, "documentation": {"id": 252, "nodeType": "StructuredDocumentation", "src": "4787:115:0", "text": " @dev  Changes password from `oldPassword` to new `passWord`.\n       Old passwords must match."}, "functionSelector": "292785fc", "id": 293, "implemented": true, "kind": "function", "modifiers": [], "name": "changePassword", "nameLocation": "4916:14:0", "nodeType": "FunctionDefinition", "parameters": {"id": 257, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 254, "mutability": "mutable", "name": "oldPassword", "nameLocation": "4939:11:0", "nodeType": "VariableDeclaration", "scope": 293, "src": "4931:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 253, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4931:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 256, "mutability": "mutable", "name": "newPassword", "nameLocation": "4960:11:0", "nodeType": "VariableDeclaration", "scope": 293, "src": "4952:19:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 255, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4952:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "4930:42:0"}, "returnParameters": {"id": 258, "nodeType": "ParameterList", "parameters": [], "src": "4980:0:0"}, "scope": 578, "src": "4907:335:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 368, "nodeType": "Block", "src": "5354:523:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 301, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5383:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5383:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 300, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "5372:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5372:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 304, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5396:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 299, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5364:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 305, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5364:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 306, "nodeType": "ExpressionStatement", "src": "5364:55:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 313, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 308, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "5437:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 311, "indexExpression": {"expression": {"id": 309, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5447:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 310, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5447:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5437:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 312, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 296, "src": "5462:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "5437:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672070617373776f72642e", "id": 314, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5472:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}, "value": "Wrong password."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}], "id": 307, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5429:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5429:61:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 316, "nodeType": "ExpressionStatement", "src": "5429:61:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 321, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 318, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5508:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 319, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "5508:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 320, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5521:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5508:14:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f74206465706f7369742030", "id": 322, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5524:18:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866", "typeString": "literal_string \"Cannot deposit 0\""}, "value": "Cannot deposit 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866", "typeString": "literal_string \"Cannot deposit 0\""}], "id": 317, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5500:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 323, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5500:43:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 324, "nodeType": "ExpressionStatement", "src": "5500:43:0"}, {"assignments": [327], "declarations": [{"constant": false, "id": 327, "mutability": "mutable", "name": "usersPlan", "nameLocation": "5559:9:0", "nodeType": "VariableDeclaration", "scope": 368, "src": "5554:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}, "typeName": {"id": 326, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 325, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "5554:4:0"}, "referencedDeclaration": 8, "src": "5554:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "visibility": "internal"}], "id": 332, "initialValue": {"baseExpression": {"id": 328, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "5571:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 331, "indexExpression": {"expression": {"id": 329, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5580:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 330, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5580:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5571:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "VariableDeclarationStatement", "src": "5554:37:0"}, {"assignments": [334], "declarations": [{"constant": false, "id": 334, "mutability": "mutable", "name": "userLimit", "nameLocation": "5606:9:0", "nodeType": "VariableDeclaration", "scope": 368, "src": "5601:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 333, "name": "uint", "nodeType": "ElementaryTypeName", "src": "5601:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 338, "initialValue": {"baseExpression": {"id": 335, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "5618:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 337, "indexExpression": {"id": 336, "name": "usersPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 327, "src": "5629:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5618:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5601:38:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 343, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 340, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5658:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 341, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "5658:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 342, "name": "userLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 334, "src": "5671:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5658:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f74206465706f736974206d6f7265207468616e20796f7572206c696d69742e", "id": 344, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5682:38:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_63296891f19ea44c7ee67e543673152b2d0b5410bad48b03ed8dc4a757a6189c", "typeString": "literal_string \"Cannot deposit more than your limit.\""}, "value": "Cannot deposit more than your limit."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_63296891f19ea44c7ee67e543673152b2d0b5410bad48b03ed8dc4a757a6189c", "typeString": "literal_string \"Cannot deposit more than your limit.\""}], "id": 339, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5650:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5650:71:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 346, "nodeType": "ExpressionStatement", "src": "5650:71:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 356, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 348, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "5739:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 351, "indexExpression": {"expression": {"id": 349, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5748:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5748:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5739:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 352, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5762:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 353, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "5762:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5739:32:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 355, "name": "userLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 334, "src": "5775:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5739:45:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e6e6f742068617665206d6f7265207468616e20796f7572206c696d69742e", "id": 357, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5786:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d63ead72ffca05320344a2c9afecd5d47368621c2f631372a7fdbd6a715cdca0", "typeString": "literal_string \"You cannot have more than your limit.\""}, "value": "You cannot have more than your limit."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_d63ead72ffca05320344a2c9afecd5d47368621c2f631372a7fdbd6a715cdca0", "typeString": "literal_string \"You cannot have more than your limit.\""}], "id": 347, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5731:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 358, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5731:95:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 359, "nodeType": "ExpressionStatement", "src": "5731:95:0"}, {"expression": {"id": 366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 360, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "5837:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 363, "indexExpression": {"expression": {"id": 361, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5846:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "5846:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5837:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"expression": {"id": 364, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5861:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 365, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "5861:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5837:33:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 367, "nodeType": "ExpressionStatement", "src": "5837:33:0"}]}, "documentation": {"id": 294, "nodeType": "StructuredDocumentation", "src": "5248:51:0", "text": " @dev Deposits money into the bank."}, "functionSelector": "b214faa5", "id": 369, "implemented": true, "kind": "function", "modifiers": [], "name": "deposit", "nameLocation": "5313:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 297, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 296, "mutability": "mutable", "name": "password", "nameLocation": "5329:8:0", "nodeType": "VariableDeclaration", "scope": 369, "src": "5321:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 295, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5321:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5320:18:0"}, "returnParameters": {"id": 298, "nodeType": "ParameterList", "parameters": [], "src": "5354:0:0"}, "scope": 578, "src": "5304:573:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 452, "nodeType": "Block", "src": "6006:558:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 379, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6035:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 380, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6035:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 378, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "6024:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 381, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6024:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 382, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6048:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 377, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6016:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 383, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6016:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 384, "nodeType": "ExpressionStatement", "src": "6016:55:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 391, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 386, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "6089:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 389, "indexExpression": {"expression": {"id": 387, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6099:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 388, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6099:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6089:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 390, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 374, "src": "6114:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6089:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672070617373776f72642e", "id": 392, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6124:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}, "value": "Wrong password."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}], "id": 385, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6081:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 393, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6081:61:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 394, "nodeType": "ExpressionStatement", "src": "6081:61:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 396, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6160:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 397, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6160:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6173:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6160:14:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f742077697468647261772030", "id": 400, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6176:19:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0", "typeString": "literal_string \"Cannot withdraw 0\""}, "value": "Cannot withdraw 0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0", "typeString": "literal_string \"Cannot withdraw 0\""}], "id": 395, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6152:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6152:44:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 402, "nodeType": "ExpressionStatement", "src": "6152:44:0"}, {"assignments": [405], "declarations": [{"constant": false, "id": 405, "mutability": "mutable", "name": "usersPlan", "nameLocation": "6212:9:0", "nodeType": "VariableDeclaration", "scope": 452, "src": "6207:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}, "typeName": {"id": 404, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 403, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "6207:4:0"}, "referencedDeclaration": 8, "src": "6207:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "visibility": "internal"}], "id": 410, "initialValue": {"baseExpression": {"id": 406, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "6224:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 409, "indexExpression": {"expression": {"id": 407, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6233:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 408, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6233:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6224:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "VariableDeclarationStatement", "src": "6207:37:0"}, {"assignments": [412], "declarations": [{"constant": false, "id": 412, "mutability": "mutable", "name": "userLimit", "nameLocation": "6259:9:0", "nodeType": "VariableDeclaration", "scope": 452, "src": "6254:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 411, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6254:4:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 416, "initialValue": {"baseExpression": {"id": 413, "name": "planLimits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 30, "src": "6271:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 415, "indexExpression": {"id": 414, "name": "usersPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 405, "src": "6282:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6271:21:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6254:38:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 421, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 418, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6311:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6311:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 420, "name": "userLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 412, "src": "6324:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6311:22:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206c696d69742e", "id": 422, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6335:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_49631b46035db90e542545d49f1ec6c823ede9c9d334edcdf0c3a8a3dc4ba55d", "typeString": "literal_string \"Cannot withdraw more than your limit.\""}, "value": "Cannot withdraw more than your limit."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_49631b46035db90e542545d49f1ec6c823ede9c9d334edcdf0c3a8a3dc4ba55d", "typeString": "literal_string \"Cannot withdraw more than your limit.\""}], "id": 417, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6303:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 423, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6303:72:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 424, "nodeType": "ExpressionStatement", "src": "6303:72:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 426, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "6393:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 429, "indexExpression": {"expression": {"id": 427, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6402:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6402:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6393:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 430, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6417:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "6417:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6393:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e6e6f74207769746864726177206d6f7265207468616e20796f7520686176652e", "id": 433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6428:41:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_474226073d13b0f64170be171b3eeefcb88340fd43e35d679214babab0deea12", "typeString": "literal_string \"You cannot withdraw more than you have.\""}, "value": "You cannot withdraw more than you have."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_474226073d13b0f64170be171b3eeefcb88340fd43e35d679214babab0deea12", "typeString": "literal_string \"You cannot withdraw more than you have.\""}], "id": 425, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6385:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6385:85:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 435, "nodeType": "ExpressionStatement", "src": "6385:85:0"}, {"expression": {"arguments": [{"id": 442, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 372, "src": "6510:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 438, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6489:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6489:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 437, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6481:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 436, "name": "address", "nodeType": "ElementaryTypeName", "src": "6481:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 440, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6481:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "6481:28:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 443, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6481:36:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 444, "nodeType": "ExpressionStatement", "src": "6481:36:0"}, {"expression": {"id": 450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 445, "name": "balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35, "src": "6527:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 448, "indexExpression": {"expression": {"id": 446, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6536:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 447, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6536:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6527:20:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 449, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 372, "src": "6551:6:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6527:30:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 451, "nodeType": "ExpressionStatement", "src": "6527:30:0"}]}, "documentation": {"id": 370, "nodeType": "StructuredDocumentation", "src": "5883:51:0", "text": " @dev Withdraw money from the bank."}, "functionSelector": "a8d2021a", "id": 453, "implemented": true, "kind": "function", "modifiers": [], "name": "withdraw", "nameLocation": "5948:8:0", "nodeType": "FunctionDefinition", "parameters": {"id": 375, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 372, "mutability": "mutable", "name": "amount", "nameLocation": "5965:6:0", "nodeType": "VariableDeclaration", "scope": 453, "src": "5957:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 371, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5957:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 374, "mutability": "mutable", "name": "password", "nameLocation": "5981:8:0", "nodeType": "VariableDeclaration", "scope": 453, "src": "5973:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 373, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "5973:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "5956:34:0"}, "returnParameters": {"id": 376, "nodeType": "ParameterList", "parameters": [], "src": "6006:0:0"}, "scope": 578, "src": "5939:625:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 556, "nodeType": "Block", "src": "6686:673:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 463, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6715:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6715:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 462, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "6704:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 465, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6704:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6728:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 461, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6696:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6696:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 468, "nodeType": "ExpressionStatement", "src": "6696:55:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 470, "name": "passwords", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13, "src": "6769:9:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$", "typeString": "mapping(address => bytes32)"}}, "id": 473, "indexExpression": {"expression": {"id": 471, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6779:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6779:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6769:21:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 474, "name": "password", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 458, "src": "6794:8:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6769:33:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672070617373776f72642e", "id": 476, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6804:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}, "value": "Wrong password."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_22d4fbe5a44e7d54732c73a57044a16e554c1b6937c05ddeb61ecac0672e1ab6", "typeString": "literal_string \"Wrong password.\""}], "id": 469, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6761:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 477, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6761:61:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 478, "nodeType": "ExpressionStatement", "src": "6761:61:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 480, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6840:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "34", "id": 481, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6848:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_4_by_1", "typeString": "int_const 4"}, "value": "4"}, "src": "6840:9:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f742076616c6964206c6576656c", "id": 483, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6851:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4b040603c7fe212c7e76955446dfc984da634993d6d5d1abc205dfaef261029a", "typeString": "literal_string \"Not valid level\""}, "value": "Not valid level"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4b040603c7fe212c7e76955446dfc984da634993d6d5d1abc205dfaef261029a", "typeString": "literal_string \"Not valid level\""}], "id": 479, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6832:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6832:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 485, "nodeType": "ExpressionStatement", "src": "6832:37:0"}, {"assignments": [488], "declarations": [{"constant": false, "id": 488, "mutability": "mutable", "name": "usersPlan", "nameLocation": "6893:9:0", "nodeType": "VariableDeclaration", "scope": 556, "src": "6888:14:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}, "typeName": {"id": 487, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 486, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "6888:4:0"}, "referencedDeclaration": 8, "src": "6888:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "visibility": "internal"}], "id": 493, "initialValue": {"baseExpression": {"id": 489, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "6905:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 492, "indexExpression": {"expression": {"id": 490, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6914:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 491, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6914:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6905:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "VariableDeclarationStatement", "src": "6888:37:0"}, {"assignments": [495], "declarations": [{"constant": false, "id": 495, "mutability": "mutable", "name": "price", "nameLocation": "6943:5:0", "nodeType": "VariableDeclaration", "scope": 556, "src": "6935:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 494, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6935:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 501, "initialValue": {"baseExpression": {"id": 496, "name": "planPrices", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "6951:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_enum$_Plan_$8_$_t_uint256_$", "typeString": "mapping(enum Bank.Plan => uint256)"}}, "id": 500, "indexExpression": {"arguments": [{"id": 498, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "6967:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 497, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "6962:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6962:11:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6951:23:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6935:39:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}, "id": 506, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 503, "name": "usersPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 488, "src": "6993:9:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"expression": {"id": 504, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "7006:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 505, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Ultimate", "nodeType": "MemberAccess", "referencedDeclaration": 7, "src": "7006:13:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "src": "6993:26:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e6e6f74207570677261646520746869732e2054686973206973206d61782e", "id": 507, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7021:39:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_ce3dd4617a120659436723a6a42116c219f58cfb14d8bcbb8d3b289274276890", "typeString": "literal_string \"You cannot upgrade this. This is max.\""}, "value": "You cannot upgrade this. This is max."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_ce3dd4617a120659436723a6a42116c219f58cfb14d8bcbb8d3b289274276890", "typeString": "literal_string \"You cannot upgrade this. This is max.\""}], "id": 502, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6985:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6985:76:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 509, "nodeType": "ExpressionStatement", "src": "6985:76:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"baseExpression": {"id": 513, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7087:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 516, "indexExpression": {"expression": {"id": 514, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7096:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7096:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7087:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}], "id": 512, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7079:7:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7079:7:0", "typeDescriptions": {}}}, "id": 517, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7079:29:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 518, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "7111:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7079:37:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "596f752063616e6e6f7420646f776e6772616465", "id": 520, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7118:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_33c8771ae8466c381554d18594530b8041ba0c65634a1707bccffcd6b5827ddb", "typeString": "literal_string \"You cannot downgrade\""}, "value": "You cannot downgrade"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_33c8771ae8466c381554d18594530b8041ba0c65634a1707bccffcd6b5827ddb", "typeString": "literal_string \"You cannot downgrade\""}], "id": 510, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7071:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7071:70:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 522, "nodeType": "ExpressionStatement", "src": "7071:70:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 524, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7160:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 525, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "7160:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 526, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "7173:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7160:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "506c616e20707269636520686967686572207468616e207061796d656e742e", "id": 528, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7180:33:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9b8a23fa4c477dc2a1a32ab6b263211134f9add91222417012a63a391cb5caac", "typeString": "literal_string \"Plan price higher than payment.\""}, "value": "Plan price higher than payment."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9b8a23fa4c477dc2a1a32ab6b263211134f9add91222417012a63a391cb5caac", "typeString": "literal_string \"Plan price higher than payment.\""}], "id": 523, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7152:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7152:62:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 530, "nodeType": "ExpressionStatement", "src": "7152:62:0"}, {"assignments": [532], "declarations": [{"constant": false, "id": 532, "mutability": "mutable", "name": "balance", "nameLocation": "7233:7:0", "nodeType": "VariableDeclaration", "scope": 556, "src": "7225:15:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 531, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7225:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 537, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 533, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7243:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 534, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "7243:9:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 535, "name": "price", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 495, "src": "7255:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7243:17:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7225:35:0"}, {"expression": {"id": 545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 538, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7271:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 541, "indexExpression": {"expression": {"id": 539, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7280:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7280:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7271:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 543, "name": "level", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 456, "src": "7299:5:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 542, "name": "Plan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 8, "src": "7294:4:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_Plan_$8_$", "typeString": "type(enum Bank.Plan)"}}, "id": 544, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7294:11:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "src": "7271:34:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "id": 546, "nodeType": "ExpressionStatement", "src": "7271:34:0"}, {"expression": {"arguments": [{"id": 553, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 532, "src": "7344:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 549, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7323:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7323:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 548, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7315:8:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_payable_$", "typeString": "type(address payable)"}, "typeName": {"id": 547, "name": "address", "nodeType": "ElementaryTypeName", "src": "7315:8:0", "stateMutability": "payable", "typeDescriptions": {}}}, "id": 551, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7315:19:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 552, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "src": "7315:28:0", "typeDescriptions": {"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7315:37:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 555, "nodeType": "ExpressionStatement", "src": "7315:37:0"}]}, "documentation": {"id": 454, "nodeType": "StructuredDocumentation", "src": "6570:46:0", "text": " @dev Upgrade plan to `level`."}, "functionSelector": "1b7abe93", "id": 557, "implemented": true, "kind": "function", "modifiers": [], "name": "upgrade", "nameLocation": "6630:7:0", "nodeType": "FunctionDefinition", "parameters": {"id": 459, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 456, "mutability": "mutable", "name": "level", "nameLocation": "6646:5:0", "nodeType": "VariableDeclaration", "scope": 557, "src": "6638:13:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 455, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6638:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 458, "mutability": "mutable", "name": "password", "nameLocation": "6661:8:0", "nodeType": "VariableDeclaration", "scope": 557, "src": "6653:16:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 457, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6653:7:0", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "6637:33:0"}, "returnParameters": {"id": 460, "nodeType": "ParameterList", "parameters": [], "src": "6686:0:0"}, "scope": 578, "src": "6621:738:0", "stateMutability": "payable", "virtual": false, "visibility": "public"}, {"body": {"id": 576, "nodeType": "Block", "src": "7407:109:0", "statements": [{"expression": {"arguments": [{"arguments": [{"expression": {"id": 565, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7436:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7436:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 564, "name": "hasAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 231, "src": "7425:10:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$", "typeString": "function (address) view returns (bool)"}}, "id": 567, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7425:22:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e2d4163636f756e7420616464726573732e", "id": 568, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7449:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}, "value": "Non-Account address."}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3617907a13dc9911c36a844656fae524536d2f5e212a83c375df942a5ace7784", "typeString": "literal_string \"Non-Account address.\""}], "id": 563, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7417:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 569, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7417:55:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 570, "nodeType": "ExpressionStatement", "src": "7417:55:0"}, {"expression": {"baseExpression": {"id": 571, "name": "userPlan", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "7489:8:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_enum$_Plan_$8_$", "typeString": "mapping(address => enum Bank.Plan)"}}, "id": 574, "indexExpression": {"expression": {"id": 572, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7498:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7498:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "7489:20:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "functionReturnParameters": 562, "id": 575, "nodeType": "Return", "src": "7482:27:0"}]}, "functionSelector": "cc80f6f3", "id": 577, "implemented": true, "kind": "function", "modifiers": [], "name": "show", "nameLocation": "7374:4:0", "nodeType": "FunctionDefinition", "parameters": {"id": 558, "nodeType": "ParameterList", "parameters": [], "src": "7378:2:0"}, "returnParameters": {"id": 562, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 561, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 577, "src": "7401:4:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}, "typeName": {"id": 560, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 559, "name": "Plan", "nodeType": "IdentifierPath", "referencedDeclaration": 8, "src": "7401:4:0"}, "referencedDeclaration": 8, "src": "7401:4:0", "typeDescriptions": {"typeIdentifier": "t_enum$_Plan_$8", "typeString": "enum Bank.Plan"}}, "visibility": "internal"}], "src": "7400:6:0"}, "scope": 578, "src": "7365:151:0", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 579, "src": "452:7066:0", "usedErrors": []}], "src": "36:7483:0"}, "bytecode": "608060405260001960055534801561001657600080fd5b5060007fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4981905567016345785d8a00007fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f556706f05b59d3b200007fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f55670de0b6b3a76400007f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b819055600360208190527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff91909155674563918244f400007fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55678ac7230489e800007fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d5560055491527fcbc4e5fb02c3d1de23a9f1e014b4d2ee5aeaea9505df5e855c9210bf472495af55610c2f806101786000396000f3fe60806040526004361061007b5760003560e01c8063a8d2021a1161004e578063a8d2021a146100fd578063b214faa514610110578063cc80f6f314610123578063fe8ca4af1461014557600080fd5b806312065fe0146100805780631b7abe93146100a8578063292785fc146100bd5780633fb3188a146100dd575b600080fd5b34801561008c57600080fd5b50610095610165565b6040519081526020015b60405180910390f35b6100bb6100b6366004610aac565b6101a9565b005b3480156100c957600080fd5b506100bb6100d8366004610aac565b610449565b3480156100e957600080fd5b506100bb6100f8366004610ace565b6104af565b6100bb61010b366004610aac565b6105bc565b6100bb61011e366004610b06565b6107bf565b34801561012f57600080fd5b5061013861099a565b60405161009f9190610b35565b34801561015157600080fd5b506100bb610160366004610b06565b6109d8565b600061017033610a8f565b6101955760405162461bcd60e51b815260040161018c90610b5d565b60405180910390fd5b503360009081526004602052604090205490565b6101b233610a8f565b6101ce5760405162461bcd60e51b815260040161018c90610b5d565b3360009081526020819052604090205481146101fc5760405162461bcd60e51b815260040161018c90610b8b565b6004821061023e5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081d985b1a59081b195d995b608a1b604482015260640161018c565b3360009081526002602052604081205460ff169060018185600381111561026757610267610b1f565b600381111561027857610278610b1f565b600381111561028957610289610b1f565b8152602081019190915260400160002054905060038260038111156102b0576102b0610b1f565b141561030c5760405162461bcd60e51b815260206004820152602560248201527f596f752063616e6e6f74207570677261646520746869732e20546869732069736044820152641036b0bc1760d91b606482015260840161018c565b33600090815260026020526040902054849060ff16600381111561033257610332610b1f565b106103765760405162461bcd60e51b8152602060048201526014602482015273596f752063616e6e6f7420646f776e677261646560601b604482015260640161018c565b803410156103c65760405162461bcd60e51b815260206004820152601f60248201527f506c616e20707269636520686967686572207468616e207061796d656e742e00604482015260640161018c565b60006103d28234610bca565b90508460038111156103e6576103e6610b1f565b336000908152600260205260409020805460ff1916600183600381111561040f5761040f610b1f565b0217905550604051339082156108fc029083906000818181858888f19350505050158015610441573d6000803e3d6000fd5b505050505050565b61045233610a8f565b61046e5760405162461bcd60e51b815260040161018c90610b5d565b33600090815260208190526040902054821461049c5760405162461bcd60e51b815260040161018c90610b8b565b3360009081526020819052604090205550565b336104f35760405162461bcd60e51b815260206004820152601460248201527321b0b63610333937b690181030b2323932b9b99760611b604482015260640161018c565b6001600160a01b03821661053e5760405162461bcd60e51b815260206004820152601260248201527121b0b636103a3790181030b2323932b9b99760711b604482015260640161018c565b61054782610a8f565b1561058e5760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b9903430b99030b71030b1b1b7bab73a1760491b604482015260640161018c565b6001600160a01b0391909116600090815260208181526040808320939093556002905220805460ff19169055565b6105c533610a8f565b6105e15760405162461bcd60e51b815260040161018c90610b5d565b33600090815260208190526040902054811461060f5760405162461bcd60e51b815260040161018c90610b8b565b346106505760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161018c565b3360009081526002602052604081205460ff1690600381838281111561067857610678610b1f565b600381111561068957610689610b1f565b8152602001908152602001600020549050803411156106f85760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206c60448201526434b6b4ba1760d91b606482015260840161018c565b336000908152600460205260409020543411156107675760405162461bcd60e51b815260206004820152602760248201527f596f752063616e6e6f74207769746864726177206d6f7265207468616e20796f6044820152663a903430bb329760c91b606482015260840161018c565b604051339085156108fc029086906000818181858888f19350505050158015610794573d6000803e3d6000fd5b5033600090815260046020526040812080548692906107b4908490610bca565b909155505050505050565b6107c833610a8f565b6107e45760405162461bcd60e51b815260040161018c90610b5d565b3360009081526020819052604090205481146108125760405162461bcd60e51b815260040161018c90610b8b565b346108525760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b604482015260640161018c565b3360009081526002602052604081205460ff1690600381838281111561087a5761087a610b1f565b600381111561088b5761088b610b1f565b8152602001908152602001600020549050803411156108f85760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74206465706f736974206d6f7265207468616e20796f7572206c6960448201526336b4ba1760e11b606482015260840161018c565b336000908152600460205260409020548190610915903490610be1565b11156109715760405162461bcd60e51b815260206004820152602560248201527f596f752063616e6e6f742068617665206d6f7265207468616e20796f7572206c60448201526434b6b4ba1760d91b606482015260840161018c565b3360009081526004602052604081208054349290610990908490610be1565b9091555050505050565b60006109a533610a8f565b6109c15760405162461bcd60e51b815260040161018c90610b5d565b503360009081526002602052604090205460ff1690565b33610a1c5760405162461bcd60e51b815260206004820152601460248201527321b0b63610333937b690181030b2323932b9b99760611b604482015260640161018c565b610a2533610a8f565b15610a6c5760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b9903430b99030b71030b1b1b7bab73a1760491b604482015260640161018c565b33600090815260208181526040808320939093556002905220805460ff19169055565b6001600160a01b0316600090815260208190526040902054151590565b60008060408385031215610abf57600080fd5b50508035926020909101359150565b60008060408385031215610ae157600080fd5b82356001600160a01b0381168114610af857600080fd5b946020939093013593505050565b600060208284031215610b1857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6020810160048310610b5757634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601490820152732737b716a0b1b1b7bab73a1030b2323932b9b99760611b604082015260600190565b6020808252600f908201526e2bb937b733903830b9b9bbb7b9321760891b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610bdc57610bdc610bb4565b500390565b60008219821115610bf457610bf4610bb4565b50019056fea264697066735822122067faea1ce7c3f669c6226e32231528d2593d7c92aa622f24f5b43f7bbdb7d7bf64736f6c634300080c0033", "bytecodeSha1": "be0f02385c3e91c94a06ad2212c032d4663a5a14", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.12+commit.f00d7308"}, "contractName": "Bank", "coverageMap": {"branches": {"0": {"Bank.changePassword": {"45": [4998, 5020, true], "46": [5063, 5099, true]}, "Bank.createAccount": {"58": [2776, 2799, true]}, "Bank.createAccountFor": {"47": [3698, 3720, true], "48": [3813, 3834, true]}, "Bank.deposit": {"53": [5372, 5394, true], "54": [5437, 5470, true], "55": [5658, 5680, true], "56": [5739, 5784, true]}, "Bank.getBalance": {"38": [4690, 4712, true]}, "Bank.show": {"57": [7425, 7447, true]}, "Bank.upgrade": {"39": [6704, 6726, true], "40": [6769, 6802, true], "41": [6840, 6849, true], "42": [6993, 7019, true], "43": [7079, 7116, true], "44": [7160, 7178, true]}, "Bank.withdraw": {"49": [6024, 6046, true], "50": [6089, 6122, true], "51": [6311, 6333, true], "52": [6393, 6426, true]}}}, "statements": {"0": {"Bank.changePassword": {"10": [4990, 5045], "11": [5055, 5119], "12": [5200, 5235]}, "Bank.createAccount": {"33": [2650, 2707], "34": [2768, 2827], "35": [2997, 3029], "36": [3039, 3071]}, "Bank.createAccountFor": {"13": [3571, 3628], "14": [3690, 3743], "15": [3805, 3862], "16": [4032, 4062], "17": [4072, 4102]}, "Bank.deposit": {"25": [5364, 5419], "26": [5429, 5490], "27": [5500, 5543], "28": [5650, 5721], "29": [5731, 5826], "30": [5837, 5870]}, "Bank.getBalance": {"0": [4682, 4737], "1": [4747, 4774]}, "Bank.hasAccount": {"37": [4419, 4459]}, "Bank.show": {"31": [7417, 7472], "32": [7482, 7509]}, "Bank.upgrade": {"2": [6696, 6751], "3": [6761, 6822], "4": [6832, 6869], "5": [6985, 7061], "6": [7071, 7141], "7": [7152, 7214], "8": [7271, 7305], "9": [7315, 7352]}, "Bank.withdraw": {"18": [6016, 6071], "19": [6081, 6142], "20": [6152, 6196], "21": [6303, 6375], "22": [6385, 6470], "23": [6481, 6517], "24": [6527, 6557]}}}}, "dependencies": [], "deployedBytecode": "60806040526004361061007b5760003560e01c8063a8d2021a1161004e578063a8d2021a146100fd578063b214faa514610110578063cc80f6f314610123578063fe8ca4af1461014557600080fd5b806312065fe0146100805780631b7abe93146100a8578063292785fc146100bd5780633fb3188a146100dd575b600080fd5b34801561008c57600080fd5b50610095610165565b6040519081526020015b60405180910390f35b6100bb6100b6366004610aac565b6101a9565b005b3480156100c957600080fd5b506100bb6100d8366004610aac565b610449565b3480156100e957600080fd5b506100bb6100f8366004610ace565b6104af565b6100bb61010b366004610aac565b6105bc565b6100bb61011e366004610b06565b6107bf565b34801561012f57600080fd5b5061013861099a565b60405161009f9190610b35565b34801561015157600080fd5b506100bb610160366004610b06565b6109d8565b600061017033610a8f565b6101955760405162461bcd60e51b815260040161018c90610b5d565b60405180910390fd5b503360009081526004602052604090205490565b6101b233610a8f565b6101ce5760405162461bcd60e51b815260040161018c90610b5d565b3360009081526020819052604090205481146101fc5760405162461bcd60e51b815260040161018c90610b8b565b6004821061023e5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081d985b1a59081b195d995b608a1b604482015260640161018c565b3360009081526002602052604081205460ff169060018185600381111561026757610267610b1f565b600381111561027857610278610b1f565b600381111561028957610289610b1f565b8152602081019190915260400160002054905060038260038111156102b0576102b0610b1f565b141561030c5760405162461bcd60e51b815260206004820152602560248201527f596f752063616e6e6f74207570677261646520746869732e20546869732069736044820152641036b0bc1760d91b606482015260840161018c565b33600090815260026020526040902054849060ff16600381111561033257610332610b1f565b106103765760405162461bcd60e51b8152602060048201526014602482015273596f752063616e6e6f7420646f776e677261646560601b604482015260640161018c565b803410156103c65760405162461bcd60e51b815260206004820152601f60248201527f506c616e20707269636520686967686572207468616e207061796d656e742e00604482015260640161018c565b60006103d28234610bca565b90508460038111156103e6576103e6610b1f565b336000908152600260205260409020805460ff1916600183600381111561040f5761040f610b1f565b0217905550604051339082156108fc029083906000818181858888f19350505050158015610441573d6000803e3d6000fd5b505050505050565b61045233610a8f565b61046e5760405162461bcd60e51b815260040161018c90610b5d565b33600090815260208190526040902054821461049c5760405162461bcd60e51b815260040161018c90610b8b565b3360009081526020819052604090205550565b336104f35760405162461bcd60e51b815260206004820152601460248201527321b0b63610333937b690181030b2323932b9b99760611b604482015260640161018c565b6001600160a01b03821661053e5760405162461bcd60e51b815260206004820152601260248201527121b0b636103a3790181030b2323932b9b99760711b604482015260640161018c565b61054782610a8f565b1561058e5760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b9903430b99030b71030b1b1b7bab73a1760491b604482015260640161018c565b6001600160a01b0391909116600090815260208181526040808320939093556002905220805460ff19169055565b6105c533610a8f565b6105e15760405162461bcd60e51b815260040161018c90610b5d565b33600090815260208190526040902054811461060f5760405162461bcd60e51b815260040161018c90610b8b565b346106505760405162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015260640161018c565b3360009081526002602052604081205460ff1690600381838281111561067857610678610b1f565b600381111561068957610689610b1f565b8152602001908152602001600020549050803411156106f85760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74207769746864726177206d6f7265207468616e20796f7572206c60448201526434b6b4ba1760d91b606482015260840161018c565b336000908152600460205260409020543411156107675760405162461bcd60e51b815260206004820152602760248201527f596f752063616e6e6f74207769746864726177206d6f7265207468616e20796f6044820152663a903430bb329760c91b606482015260840161018c565b604051339085156108fc029086906000818181858888f19350505050158015610794573d6000803e3d6000fd5b5033600090815260046020526040812080548692906107b4908490610bca565b909155505050505050565b6107c833610a8f565b6107e45760405162461bcd60e51b815260040161018c90610b5d565b3360009081526020819052604090205481146108125760405162461bcd60e51b815260040161018c90610b8b565b346108525760405162461bcd60e51b815260206004820152601060248201526f043616e6e6f74206465706f73697420360841b604482015260640161018c565b3360009081526002602052604081205460ff1690600381838281111561087a5761087a610b1f565b600381111561088b5761088b610b1f565b8152602001908152602001600020549050803411156108f85760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f74206465706f736974206d6f7265207468616e20796f7572206c6960448201526336b4ba1760e11b606482015260840161018c565b336000908152600460205260409020548190610915903490610be1565b11156109715760405162461bcd60e51b815260206004820152602560248201527f596f752063616e6e6f742068617665206d6f7265207468616e20796f7572206c60448201526434b6b4ba1760d91b606482015260840161018c565b3360009081526004602052604081208054349290610990908490610be1565b9091555050505050565b60006109a533610a8f565b6109c15760405162461bcd60e51b815260040161018c90610b5d565b503360009081526002602052604090205460ff1690565b33610a1c5760405162461bcd60e51b815260206004820152601460248201527321b0b63610333937b690181030b2323932b9b99760611b604482015260640161018c565b610a2533610a8f565b15610a6c5760405162461bcd60e51b815260206004820152601760248201527620b2323932b9b9903430b99030b71030b1b1b7bab73a1760491b604482015260640161018c565b33600090815260208181526040808320939093556002905220805460ff19169055565b6001600160a01b0316600090815260208190526040902054151590565b60008060408385031215610abf57600080fd5b50508035926020909101359150565b60008060408385031215610ae157600080fd5b82356001600160a01b0381168114610af857600080fd5b946020939093013593505050565b600060208284031215610b1857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6020810160048310610b5757634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601490820152732737b716a0b1b1b7bab73a1030b2323932b9b99760611b604082015260600190565b6020808252600f908201526e2bb937b733903830b9b9bbb7b9321760891b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610bdc57610bdc610bb4565b500390565b60008219821115610bf457610bf4610bb4565b50019056fea264697066735822122067faea1ce7c3f669c6226e32231528d2593d7c92aa622f24f5b43f7bbdb7d7bf64736f6c634300080c0033", "deployedSourceMap": "452:7066:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4621:160;;;;;;;;;;;;;:::i;:::-;;;160:25:2;;;148:2;133:18;4621:160:0;;;;;;;;6621:738;;;;;;:::i;:::-;;:::i;:::-;;4907:335;;;;;;;;;;-1:-1:-1;4907:335:0;;;;;:::i;:::-;;:::i;3433:676::-;;;;;;;;;;-1:-1:-1;3433:676:0;;;;;:::i;:::-;;:::i;5939:625::-;;;;;;:::i;:::-;;:::i;5304:573::-;;;;;;:::i;:::-;;:::i;7365:151::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2533:545::-;;;;;;;;;;-1:-1:-1;2533:545:0;;;;;:::i;:::-;;:::i;4621:160::-;4663:7;4690:22;4701:10;4690;:22::i;:::-;4682:55;;;;-1:-1:-1;;;4682:55:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4763:10:0;4754:20;;;;:8;:20;;;;;;;4621:160::o;6621:738::-;6704:22;6715:10;6704;:22::i;:::-;6696:55;;;;-1:-1:-1;;;6696:55:0;;;;;;;:::i;:::-;6779:10;6769:9;:21;;;;;;;;;;;:33;;6761:61;;;;-1:-1:-1;;;6761:61:0;;;;;;;:::i;:::-;6848:1;6840:5;:9;6832:37;;;;-1:-1:-1;;;6832:37:0;;2612:2:2;6832:37:0;;;2594:21:2;2651:2;2631:18;;;2624:30;-1:-1:-1;;;2670:18:2;;;2663:45;2725:18;;6832:37:0;2410:339:2;6832:37:0;6914:10;6888:14;6905:20;;;:8;:20;;;;;;;;;;6888:14;6967:5;6962:11;;;;;;;;:::i;:::-;6951:23;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;6951:23:0;;;-1:-1:-1;7006:13:0;6993:9;:26;;;;;;;;:::i;:::-;;;6985:76;;;;-1:-1:-1;;;6985:76:0;;2956:2:2;6985:76:0;;;2938:21:2;2995:2;2975:18;;;2968:30;3034:34;3014:18;;;3007:62;-1:-1:-1;;;3085:18:2;;;3078:35;3130:19;;6985:76:0;2754:401:2;6985:76:0;7096:10;7087:20;;;;:8;:20;;;;;;7111:5;;7087:20;;7079:29;;;;;;;;:::i;:::-;:37;7071:70;;;;-1:-1:-1;;;7071:70:0;;3362:2:2;7071:70:0;;;3344:21:2;3401:2;3381:18;;;3374:30;-1:-1:-1;;;3420:18:2;;;3413:50;3480:18;;7071:70:0;3160:344:2;7071:70:0;7173:5;7160:9;:18;;7152:62;;;;-1:-1:-1;;;7152:62:0;;3711:2:2;7152:62:0;;;3693:21:2;3750:2;3730:18;;;3723:30;3789:33;3769:18;;;3762:61;3840:18;;7152:62:0;3509:355:2;7152:62:0;7225:15;7243:17;7255:5;7243:9;:17;:::i;:::-;7225:35;;7299:5;7294:11;;;;;;;;:::i;:::-;7280:10;7271:20;;;;:8;:20;;;;;:34;;-1:-1:-1;;7271:34:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7315:37:0;;7323:10;;7315:37;;;;;7344:7;;7315:37;;;;7344:7;7323:10;7315:37;;;;;;;;;;;;;;;;;;;;;6686:673;;;6621:738;;:::o;4907:335::-;4998:22;5009:10;4998;:22::i;:::-;4990:55;;;;-1:-1:-1;;;4990:55:0;;;;;;;:::i;:::-;5073:10;5063:9;:21;;;;;;;;;;;:36;;5055:64;;;;-1:-1:-1;;;5055:64:0;;;;;;;:::i;:::-;5210:10;5200:9;:21;;;;;;;;;;:35;-1:-1:-1;4907:335:0:o;3433:676::-;3579:10;3571:57;;;;-1:-1:-1;;;3571:57:0;;4686:2:2;3571:57:0;;;4668:21:2;4725:2;4705:18;;;4698:30;-1:-1:-1;;;4744:18:2;;;4737:50;4804:18;;3571:57:0;4484:344:2;3571:57:0;-1:-1:-1;;;;;3698:22:0;;3690:53;;;;-1:-1:-1;;;3690:53:0;;5035:2:2;3690:53:0;;;5017:21:2;5074:2;5054:18;;;5047:30;-1:-1:-1;;;5093:18:2;;;5086:48;5151:18;;3690:53:0;4833:342:2;3690:53:0;3814:20;3825:8;3814:10;:20::i;:::-;3813:21;3805:57;;;;-1:-1:-1;;;3805:57:0;;5382:2:2;3805:57:0;;;5364:21:2;5421:2;5401:18;;;5394:30;-1:-1:-1;;;5440:18:2;;;5433:53;5503:18;;3805:57:0;5180:347:2;3805:57:0;-1:-1:-1;;;;;4032:19:0;;;;:9;:19;;;;;;;;;;;:30;;;;4072:8;:18;;;:30;;-1:-1:-1;;4072:30:0;;;3433:676::o;5939:625::-;6024:22;6035:10;6024;:22::i;:::-;6016:55;;;;-1:-1:-1;;;6016:55:0;;;;;;;:::i;:::-;6099:10;6089:9;:21;;;;;;;;;;;:33;;6081:61;;;;-1:-1:-1;;;6081:61:0;;;;;;;:::i;:::-;6160:9;6152:44;;;;-1:-1:-1;;;6152:44:0;;6085:2:2;6152:44:0;;;6067:21:2;6124:2;6104:18;;;6097:30;-1:-1:-1;;;6143:18:2;;;6136:47;6200:18;;6152:44:0;5883:341:2;6152:44:0;6233:10;6207:14;6224:20;;;:8;:20;;;;;;;;;6271:10;6207:14;6224:20;6271:21;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6254:38;;6324:9;6311;:22;;6303:72;;;;-1:-1:-1;;;6303:72:0;;6431:2:2;6303:72:0;;;6413:21:2;6470:2;6450:18;;;6443:30;6509:34;6489:18;;;6482:62;-1:-1:-1;;;6560:18:2;;;6553:35;6605:19;;6303:72:0;6229:401:2;6303:72:0;6402:10;6393:20;;;;:8;:20;;;;;;6417:9;-1:-1:-1;6393:33:0;6385:85;;;;-1:-1:-1;;;6385:85:0;;6837:2:2;6385:85:0;;;6819:21:2;6876:2;6856:18;;;6849:30;6915:34;6895:18;;;6888:62;-1:-1:-1;;;6966:18:2;;;6959:37;7013:19;;6385:85:0;6635:403:2;6385:85:0;6481:36;;6489:10;;6481:36;;;;;6510:6;;6481:36;;;;6510:6;6489:10;6481:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6536:10:0;6527:20;;;;:8;:20;;;;;:30;;6551:6;;6527:20;:30;;6551:6;;6527:30;:::i;:::-;;;;-1:-1:-1;;;;;;5939:625:0:o;5304:573::-;5372:22;5383:10;5372;:22::i;:::-;5364:55;;;;-1:-1:-1;;;5364:55:0;;;;;;;:::i;:::-;5447:10;5437:9;:21;;;;;;;;;;;:33;;5429:61;;;;-1:-1:-1;;;5429:61:0;;;;;;;:::i;:::-;5508:9;5500:43;;;;-1:-1:-1;;;5500:43:0;;7245:2:2;5500:43:0;;;7227:21:2;7284:2;7264:18;;;7257:30;-1:-1:-1;;;7303:18:2;;;7296:46;7359:18;;5500:43:0;7043:340:2;5500:43:0;5580:10;5554:14;5571:20;;;:8;:20;;;;;;;;;5618:10;5554:14;5571:20;5618:21;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5601:38;;5671:9;5658;:22;;5650:71;;;;-1:-1:-1;;;5650:71:0;;7590:2:2;5650:71:0;;;7572:21:2;7629:2;7609:18;;;7602:30;7668:34;7648:18;;;7641:62;-1:-1:-1;;;7719:18:2;;;7712:34;7763:19;;5650:71:0;7388:400:2;5650:71:0;5748:10;5739:20;;;;:8;:20;;;;;;5775:9;;5739:32;;5762:9;;5739:32;:::i;:::-;:45;;5731:95;;;;-1:-1:-1;;;5731:95:0;;8128:2:2;5731:95:0;;;8110:21:2;8167:2;8147:18;;;8140:30;8206:34;8186:18;;;8179:62;-1:-1:-1;;;8257:18:2;;;8250:35;8302:19;;5731:95:0;7926:401:2;5731:95:0;5846:10;5837:20;;;;:8;:20;;;;;:33;;5861:9;;5837:20;:33;;5861:9;;5837:33;:::i;:::-;;;;-1:-1:-1;;;;;5304:573:0:o;7365:151::-;7401:4;7425:22;7436:10;7425;:22::i;:::-;7417:55;;;;-1:-1:-1;;;7417:55:0;;;;;;;:::i;:::-;-1:-1:-1;7498:10:0;7489:20;;;;:8;:20;;;;;;;;;7365:151::o;2533:545::-;2658:10;2650:57;;;;-1:-1:-1;;;2650:57:0;;4686:2:2;2650:57:0;;;4668:21:2;4725:2;4705:18;;;4698:30;-1:-1:-1;;;4744:18:2;;;4737:50;4804:18;;2650:57:0;4484:344:2;2650:57:0;2777:22;2788:10;2777;:22::i;:::-;2776:23;2768:59;;;;-1:-1:-1;;;2768:59:0;;5382:2:2;2768:59:0;;;5364:21:2;5421:2;5401:18;;;5394:30;-1:-1:-1;;;5440:18:2;;;5433:53;5503:18;;2768:59:0;5180:347:2;2768:59:0;3007:10;2997:9;:21;;;;;;;;;;;:32;;;;3039:8;:20;;;:32;;-1:-1:-1;;3039:32:0;;;2533:545::o;4271:195::-;-1:-1:-1;;;;;4426:19:0;4330:4;4426:19;;;;;;;;;;;:33;;;4271:195::o;196:248:2:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;-1:-1:-1;;364:23:2;;;434:2;419:18;;;406:32;;-1:-1:-1;196:248:2:o;702:354::-;770:6;778;831:2;819:9;810:7;806:23;802:32;799:52;;;847:1;844;837:12;799:52;873:23;;-1:-1:-1;;;;;925:31:2;;915:42;;905:70;;971:1;968;961:12;905:70;994:5;1046:2;1031:18;;;;1018:32;;-1:-1:-1;;;702:354:2:o;1061:180::-;1120:6;1173:2;1161:9;1152:7;1148:23;1144:32;1141:52;;;1189:1;1186;1179:12;1141:52;-1:-1:-1;1212:23:2;;1061:180;-1:-1:-1;1061:180:2:o;1246:127::-;1307:10;1302:3;1298:20;1295:1;1288:31;1338:4;1335:1;1328:15;1362:4;1359:1;1352:15;1378:334;1516:2;1501:18;;1549:1;1538:13;;1528:144;;1594:10;1589:3;1585:20;1582:1;1575:31;1629:4;1626:1;1619:15;1657:4;1654:1;1647:15;1528:144;1681:25;;;1378:334;:::o;1717:344::-;1919:2;1901:21;;;1958:2;1938:18;;;1931:30;-1:-1:-1;;;1992:2:2;1977:18;;1970:50;2052:2;2037:18;;1717:344::o;2066:339::-;2268:2;2250:21;;;2307:2;2287:18;;;2280:30;-1:-1:-1;;;2341:2:2;2326:18;;2319:45;2396:2;2381:18;;2066:339::o;3869:127::-;3930:10;3925:3;3921:20;3918:1;3911:31;3961:4;3958:1;3951:15;3985:4;3982:1;3975:15;4001:125;4041:4;4069:1;4066;4063:8;4060:34;;;4074:18;;:::i;:::-;-1:-1:-1;4111:9:2;;4001:125::o;7793:128::-;7833:3;7864:1;7860:6;7857:1;7854:13;7851:39;;;7870:18;;:::i;:::-;-1:-1:-1;7906:9:2;;7793:128::o", "language": "Solidity", "natspec": {"author": "Anthony (fps) https://github.com/fps8k.", "details": "The bank itself.       Like a typical bank, users deposit and their balances are       recorded against their addresses, but the ether is deposited       directly into the contract bank.       Withdrawals and Transfers cost some tax.       Deposits don't.", "kind": "dev", "methods": {"changePassword(bytes32,bytes32)": {"details": "Changes password from `oldPassword` to new `passWord`.       Old passwords must match."}, "constructor": {"details": "Constructor sets the plan limits and the plan prices for the       deployment of the contract."}, "createAccount(bytes32)": {"details": "Creates an account for the caller with password as `password`.       The password needs to be hashed off-chain for security.       This will also validate that the msg.sender has no accounts already.", "params": {"password": "User's preferred password."}}, "createAccountFor(address,bytes32)": {"details": "Creates an account for `_address` with password as `password`.       The password needs to be hashed off-chain for security.       This will also validate that the `_address` has no accounts already.", "params": {"_address": "Address to open account for.", "password": "User's preferred password."}}, "deposit(bytes32)": {"details": "Deposits money into the bank."}, "getBalance()": {"details": "Returns the balance of the caller.       Caller must have an account.", "returns": {"_0": "uint256 caller's balance."}}, "upgrade(uint256,bytes32)": {"details": "Upgrade plan to `level`."}, "withdraw(uint256,bytes32)": {"details": "Withdraw money from the bank."}}, "stateVariables": {"balances": {"details": "Mapping address to the amount of ether in their balance."}, "passwords": {"details": "Mapping user addresses to their passwords."}, "planLimits": {"details": "Mapping plans to their limits."}, "planPrices": {"details": "Mapping the plans to their prices for upgrades."}, "stretch": {"details": "Maximum ether."}}, "title": "Bank Contract.", "version": 1}, "offset": [452, 7518], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA8D2021A GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA8D2021A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0xB214FAA5 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xCC80F6F3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xFE8CA4AF EQ PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1B7ABE93 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x292785FC EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x3FB3188A EQ PUSH2 0xDD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0xD8 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0xF8 CALLDATASIZE PUSH1 0x4 PUSH2 0xACE JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH2 0xBB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0xBB PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x7BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBB PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B2 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB8B JUMP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD081D985B1A59081B195D995B PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x1 DUP2 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x267 JUMPI PUSH2 0x267 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x278 JUMPI PUSH2 0x278 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x289 JUMPI PUSH2 0x289 PUSH2 0xB1F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2B0 PUSH2 0xB1F JUMP JUMPDEST EQ ISZERO PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207570677261646520746869732E2054686973206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1036B0BC17 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x332 JUMPI PUSH2 0x332 PUSH2 0xB1F JUMP JUMPDEST LT PUSH2 0x376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x596F752063616E6E6F7420646F776E6772616465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST DUP1 CALLVALUE LT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C616E20707269636520686967686572207468616E207061796D656E742E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2 DUP3 CALLVALUE PUSH2 0xBCA JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E6 PUSH2 0xB1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x40F JUMPI PUSH2 0x40F PUSH2 0xB1F JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x452 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB8B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP JUMP JUMPDEST CALLER PUSH2 0x4F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B63610333937B690181030B2323932B9B997 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x21B0B636103A3790181030B2323932B9B997 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0x547 DUP3 PUSH2 0xA8F JUMP JUMPDEST ISZERO PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B2323932B9B9903430B99030B71030B1B1B7BAB73A17 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5C5 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ PUSH2 0x60F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB8B JUMP JUMPDEST CALLVALUE PUSH2 0x650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 DUP4 DUP3 DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x689 JUMPI PUSH2 0x689 PUSH2 0xB1F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 CALLVALUE GT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177206D6F7265207468616E20796F7572206C PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x34B6B4BA17 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLVALUE GT ISZERO PUSH2 0x767 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207769746864726177206D6F7265207468616E20796F PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3A903430BB3297 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP6 ISZERO PUSH2 0x8FC MUL SWAP1 DUP7 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x794 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x7B4 SWAP1 DUP5 SWAP1 PUSH2 0xBCA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C8 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x7E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 EQ PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB8B JUMP JUMPDEST CALLVALUE PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x43616E6E6F74206465706F736974203 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0x3 DUP2 DUP4 DUP3 DUP2 GT ISZERO PUSH2 0x87A JUMPI PUSH2 0x87A PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88B PUSH2 0xB1F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 CALLVALUE GT ISZERO PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206465706F736974206D6F7265207468616E20796F7572206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x36B4BA17 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x915 SWAP1 CALLVALUE SWAP1 PUSH2 0xBE1 JUMP JUMPDEST GT ISZERO PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F742068617665206D6F7265207468616E20796F7572206C PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x34B6B4BA17 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x990 SWAP1 DUP5 SWAP1 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 CALLER PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0xB5D JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B63610333937B690181030B2323932B9B997 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST PUSH2 0xA25 CALLER PUSH2 0xA8F JUMP JUMPDEST ISZERO PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B2323932B9B9903430B99030B71030B1B1B7BAB73A17 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x18C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xABF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x4 DUP4 LT PUSH2 0xB57 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x2737B716A0B1B1B7BAB73A1030B2323932B9B997 PUSH1 0x61 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x2BB937B733903830B9B9BBB7B93217 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBDC JUMPI PUSH2 0xBDC PUSH2 0xBB4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBF4 JUMPI PUSH2 0xBF4 PUSH2 0xBB4 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xFAEA1CE7C3F669C6 0x22 PUSH15 0x32231528D2593D7C92AA622F24F5B4 EXTCODEHASH PUSH28 0xBDB7D7BF64736F6C634300080C003300000000000000000000000000 ", "pcMap": {"0": {"offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [452, 7518], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x4"}, "7": {"fn": null, "offset": [452, 7518], "op": "CALLDATASIZE", "path": "0"}, "8": {"fn": null, "offset": [452, 7518], "op": "LT", "path": "0"}, "9": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x7B"}, "12": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "13": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x0"}, "15": {"fn": null, "offset": [452, 7518], "op": "CALLDATALOAD", "path": "0"}, "16": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0xE0"}, "18": {"fn": null, "offset": [452, 7518], "op": "SHR", "path": "0"}, "19": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "20": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0xA8D2021A"}, "25": {"fn": null, "offset": [452, 7518], "op": "GT", "path": "0"}, "26": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x4E"}, "29": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "30": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "31": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0xA8D2021A"}, "36": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "37": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0xFD"}, "40": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "41": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "42": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0xB214FAA5"}, "47": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "48": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x110"}, "51": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "52": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "53": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0xCC80F6F3"}, "58": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "59": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x123"}, "62": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "63": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "64": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0xFE8CA4AF"}, "69": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "70": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x145"}, "73": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "74": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x0"}, "76": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "77": {"fn": null, "offset": [452, 7518], "op": "REVERT", "path": "0"}, "78": {"fn": null, "offset": [452, 7518], "op": "JUMPDEST", "path": "0"}, "79": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "80": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0x12065FE0"}, "85": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "86": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0x80"}, "89": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "90": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "91": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0x1B7ABE93"}, "96": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "97": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0xA8"}, "100": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "101": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "102": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0x292785FC"}, "107": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "108": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0xBD"}, "111": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "112": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "113": {"fn": null, "offset": [452, 7518], "op": "PUSH4", "path": "0", "value": "0x3FB3188A"}, "118": {"fn": null, "offset": [452, 7518], "op": "EQ", "path": "0"}, "119": {"fn": null, "offset": [452, 7518], "op": "PUSH2", "path": "0", "value": "0xDD"}, "122": {"fn": null, "offset": [452, 7518], "op": "JUMPI", "path": "0"}, "123": {"fn": null, "offset": [452, 7518], "op": "JUMPDEST", "path": "0"}, "124": {"fn": null, "offset": [452, 7518], "op": "PUSH1", "path": "0", "value": "0x0"}, "126": {"fn": null, "offset": [452, 7518], "op": "DUP1", "path": "0"}, "127": {"first_revert": true, "fn": null, "offset": [452, 7518], "op": "REVERT", "path": "0"}, "128": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPDEST", "path": "0"}, "129": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "CALLVALUE", "path": "0"}, "130": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "DUP1", "path": "0"}, "131": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "ISZERO", "path": "0"}, "132": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH2", "path": "0", "value": "0x8C"}, "135": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPI", "path": "0"}, "136": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH1", "path": "0", "value": "0x0"}, "138": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "DUP1", "path": "0"}, "139": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "REVERT", "path": "0"}, "140": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPDEST", "path": "0"}, "141": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "POP", "path": "0"}, "142": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH2", "path": "0", "value": "0x95"}, "145": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH2", "path": "0", "value": "0x165"}, "148": {"fn": "Bank.getBalance", "jump": "i", "offset": [4621, 4781], "op": "JUMP", "path": "0"}, "149": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPDEST", "path": "0"}, "150": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH1", "path": "0", "value": "0x40"}, "152": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "MLOAD", "path": "0"}, "153": {"op": "SWAP1"}, "154": {"op": "DUP2"}, "155": {"op": "MSTORE"}, "156": {"op": "PUSH1", "value": "0x20"}, "158": {"op": "ADD"}, "159": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPDEST", "path": "0"}, "160": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "PUSH1", "path": "0", "value": "0x40"}, "162": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "MLOAD", "path": "0"}, "163": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "DUP1", "path": "0"}, "164": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "SWAP2", "path": "0"}, "165": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "SUB", "path": "0"}, "166": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "SWAP1", "path": "0"}, "167": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "RETURN", "path": "0"}, "168": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "JUMPDEST", "path": "0"}, "169": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "PUSH2", "path": "0", "value": "0xBB"}, "172": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "PUSH2", "path": "0", "value": "0xB6"}, "175": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "CALLDATASIZE", "path": "0"}, "176": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "PUSH1", "path": "0", "value": "0x4"}, "178": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "PUSH2", "path": "0", "value": "0xAAC"}, "181": {"fn": "Bank.upgrade", "jump": "i", "offset": [6621, 7359], "op": "JUMP", "path": "0"}, "182": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "JUMPDEST", "path": "0"}, "183": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "PUSH2", "path": "0", "value": "0x1A9"}, "186": {"fn": "Bank.upgrade", "jump": "i", "offset": [6621, 7359], "op": "JUMP", "path": "0"}, "187": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "JUMPDEST", "path": "0"}, "188": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "STOP", "path": "0"}, "189": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "JUMPDEST", "path": "0"}, "190": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "CALLVALUE", "path": "0"}, "191": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "DUP1", "path": "0"}, "192": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "ISZERO", "path": "0"}, "193": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH2", "path": "0", "value": "0xC9"}, "196": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "JUMPI", "path": "0"}, "197": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH1", "path": "0", "value": "0x0"}, "199": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "DUP1", "path": "0"}, "200": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "REVERT", "path": "0"}, "201": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "JUMPDEST", "path": "0"}, "202": {"op": "POP"}, "203": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH2", "path": "0", "value": "0xBB"}, "206": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH2", "path": "0", "value": "0xD8"}, "209": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "CALLDATASIZE", "path": "0"}, "210": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH1", "path": "0", "value": "0x4"}, "212": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH2", "path": "0", "value": "0xAAC"}, "215": {"fn": "Bank.changePassword", "jump": "i", "offset": [4907, 5242], "op": "JUMP", "path": "0"}, "216": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "JUMPDEST", "path": "0"}, "217": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "PUSH2", "path": "0", "value": "0x449"}, "220": {"fn": "Bank.changePassword", "jump": "i", "offset": [4907, 5242], "op": "JUMP", "path": "0"}, "221": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "JUMPDEST", "path": "0"}, "222": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "CALLVALUE", "path": "0"}, "223": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "DUP1", "path": "0"}, "224": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "ISZERO", "path": "0"}, "225": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH2", "path": "0", "value": "0xE9"}, "228": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "JUMPI", "path": "0"}, "229": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH1", "path": "0", "value": "0x0"}, "231": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "DUP1", "path": "0"}, "232": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "REVERT", "path": "0"}, "233": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "JUMPDEST", "path": "0"}, "234": {"op": "POP"}, "235": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH2", "path": "0", "value": "0xBB"}, "238": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH2", "path": "0", "value": "0xF8"}, "241": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "CALLDATASIZE", "path": "0"}, "242": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH1", "path": "0", "value": "0x4"}, "244": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH2", "path": "0", "value": "0xACE"}, "247": {"fn": "Bank.createAccountFor", "jump": "i", "offset": [3433, 4109], "op": "JUMP", "path": "0"}, "248": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "JUMPDEST", "path": "0"}, "249": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "PUSH2", "path": "0", "value": "0x4AF"}, "252": {"fn": "Bank.createAccountFor", "jump": "i", "offset": [3433, 4109], "op": "JUMP", "path": "0"}, "253": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "JUMPDEST", "path": "0"}, "254": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "PUSH2", "path": "0", "value": "0xBB"}, "257": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "PUSH2", "path": "0", "value": "0x10B"}, "260": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "CALLDATASIZE", "path": "0"}, "261": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "PUSH1", "path": "0", "value": "0x4"}, "263": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "PUSH2", "path": "0", "value": "0xAAC"}, "266": {"fn": "Bank.withdraw", "jump": "i", "offset": [5939, 6564], "op": "JUMP", "path": "0"}, "267": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "JUMPDEST", "path": "0"}, "268": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "PUSH2", "path": "0", "value": "0x5BC"}, "271": {"fn": "Bank.withdraw", "jump": "i", "offset": [5939, 6564], "op": "JUMP", "path": "0"}, "272": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "JUMPDEST", "path": "0"}, "273": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "PUSH2", "path": "0", "value": "0xBB"}, "276": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "PUSH2", "path": "0", "value": "0x11E"}, "279": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "CALLDATASIZE", "path": "0"}, "280": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "PUSH1", "path": "0", "value": "0x4"}, "282": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "PUSH2", "path": "0", "value": "0xB06"}, "285": {"fn": "Bank.deposit", "jump": "i", "offset": [5304, 5877], "op": "JUMP", "path": "0"}, "286": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "JUMPDEST", "path": "0"}, "287": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "PUSH2", "path": "0", "value": "0x7BF"}, "290": {"fn": "Bank.deposit", "jump": "i", "offset": [5304, 5877], "op": "JUMP", "path": "0"}, "291": {"fn": "Bank.show", "offset": [7365, 7516], "op": "JUMPDEST", "path": "0"}, "292": {"fn": "Bank.show", "offset": [7365, 7516], "op": "CALLVALUE", "path": "0"}, "293": {"fn": "Bank.show", "offset": [7365, 7516], "op": "DUP1", "path": "0"}, "294": {"fn": "Bank.show", "offset": [7365, 7516], "op": "ISZERO", "path": "0"}, "295": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH2", "path": "0", "value": "0x12F"}, "298": {"fn": "Bank.show", "offset": [7365, 7516], "op": "JUMPI", "path": "0"}, "299": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH1", "path": "0", "value": "0x0"}, "301": {"fn": "Bank.show", "offset": [7365, 7516], "op": "DUP1", "path": "0"}, "302": {"fn": "Bank.show", "offset": [7365, 7516], "op": "REVERT", "path": "0"}, "303": {"fn": "Bank.show", "offset": [7365, 7516], "op": "JUMPDEST", "path": "0"}, "304": {"fn": "Bank.show", "offset": [7365, 7516], "op": "POP", "path": "0"}, "305": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH2", "path": "0", "value": "0x138"}, "308": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH2", "path": "0", "value": "0x99A"}, "311": {"fn": "Bank.show", "jump": "i", "offset": [7365, 7516], "op": "JUMP", "path": "0"}, "312": {"fn": "Bank.show", "offset": [7365, 7516], "op": "JUMPDEST", "path": "0"}, "313": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH1", "path": "0", "value": "0x40"}, "315": {"fn": "Bank.show", "offset": [7365, 7516], "op": "MLOAD", "path": "0"}, "316": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH2", "path": "0", "value": "0x9F"}, "319": {"fn": "Bank.show", "offset": [7365, 7516], "op": "SWAP2", "path": "0"}, "320": {"fn": "Bank.show", "offset": [7365, 7516], "op": "SWAP1", "path": "0"}, "321": {"fn": "Bank.show", "offset": [7365, 7516], "op": "PUSH2", "path": "0", "value": "0xB35"}, "324": {"fn": "Bank.show", "jump": "i", "offset": [7365, 7516], "op": "JUMP", "path": "0"}, "325": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "JUMPDEST", "path": "0"}, "326": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "CALLVALUE", "path": "0"}, "327": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "DUP1", "path": "0"}, "328": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "ISZERO", "path": "0"}, "329": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH2", "path": "0", "value": "0x151"}, "332": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "JUMPI", "path": "0"}, "333": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH1", "path": "0", "value": "0x0"}, "335": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "DUP1", "path": "0"}, "336": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "REVERT", "path": "0"}, "337": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "JUMPDEST", "path": "0"}, "338": {"op": "POP"}, "339": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH2", "path": "0", "value": "0xBB"}, "342": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH2", "path": "0", "value": "0x160"}, "345": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "CALLDATASIZE", "path": "0"}, "346": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH1", "path": "0", "value": "0x4"}, "348": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH2", "path": "0", "value": "0xB06"}, "351": {"fn": "Bank.createAccount", "jump": "i", "offset": [2533, 3078], "op": "JUMP", "path": "0"}, "352": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "JUMPDEST", "path": "0"}, "353": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "PUSH2", "path": "0", "value": "0x9D8"}, "356": {"fn": "Bank.createAccount", "jump": "i", "offset": [2533, 3078], "op": "JUMP", "path": "0"}, "357": {"fn": "Bank.getBalance", "offset": [4621, 4781], "op": "JUMPDEST", "path": "0"}, "358": {"fn": "Bank.getBalance", "offset": [4663, 4670], "op": "PUSH1", "path": "0", "value": "0x0"}, "360": {"fn": "Bank.getBalance", "offset": [4690, 4712], "op": "PUSH2", "path": "0", "statement": 0, "value": "0x170"}, "363": {"fn": "Bank.getBalance", "offset": [4701, 4711], "op": "CALLER", "path": "0"}, "364": {"fn": "Bank.getBalance", "offset": [4690, 4700], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "367": {"fn": "Bank.getBalance", "jump": "i", "offset": [4690, 4712], "op": "JUMP", "path": "0"}, "368": {"branch": 38, "fn": "Bank.getBalance", "offset": [4690, 4712], "op": "JUMPDEST", "path": "0"}, "369": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH2", "path": "0", "value": "0x195"}, "372": {"branch": 38, "fn": "Bank.getBalance", "offset": [4682, 4737], "op": "JUMPI", "path": "0"}, "373": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH1", "path": "0", "value": "0x40"}, "375": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "MLOAD", "path": "0"}, "376": {"op": "PUSH3", "value": "0x461BCD"}, "380": {"op": "PUSH1", "value": "0xE5"}, "382": {"op": "SHL"}, "383": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "DUP2", "path": "0"}, "384": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "MSTORE", "path": "0"}, "385": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH1", "path": "0", "value": "0x4"}, "387": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "ADD", "path": "0"}, "388": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH2", "path": "0", "value": "0x18C"}, "391": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "SWAP1", "path": "0"}, "392": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "395": {"fn": "Bank.getBalance", "jump": "i", "offset": [4682, 4737], "op": "JUMP", "path": "0"}, "396": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "JUMPDEST", "path": "0"}, "397": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "PUSH1", "path": "0", "value": "0x40"}, "399": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "MLOAD", "path": "0"}, "400": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "DUP1", "path": "0"}, "401": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "SWAP2", "path": "0"}, "402": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "SUB", "path": "0"}, "403": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "SWAP1", "path": "0"}, "404": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "REVERT", "optimizer_revert": true, "path": "0"}, "405": {"fn": "Bank.getBalance", "offset": [4682, 4737], "op": "JUMPDEST", "path": "0"}, "406": {"op": "POP"}, "407": {"fn": "Bank.getBalance", "offset": [4763, 4773], "op": "CALLER", "path": "0", "statement": 1}, "408": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "PUSH1", "path": "0", "value": "0x0"}, "410": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "SWAP1", "path": "0"}, "411": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "DUP2", "path": "0"}, "412": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "MSTORE", "path": "0"}, "413": {"fn": "Bank.getBalance", "offset": [4754, 4762], "op": "PUSH1", "path": "0", "value": "0x4"}, "415": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "PUSH1", "path": "0", "value": "0x20"}, "417": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "MSTORE", "path": "0"}, "418": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "PUSH1", "path": "0", "value": "0x40"}, "420": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "SWAP1", "path": "0"}, "421": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "KECCAK256", "path": "0"}, "422": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "SLOAD", "path": "0"}, "423": {"fn": "Bank.getBalance", "offset": [4754, 4774], "op": "SWAP1", "path": "0"}, "424": {"fn": "Bank.getBalance", "jump": "o", "offset": [4621, 4781], "op": "JUMP", "path": "0"}, "425": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "JUMPDEST", "path": "0"}, "426": {"fn": "Bank.upgrade", "offset": [6704, 6726], "op": "PUSH2", "path": "0", "statement": 2, "value": "0x1B2"}, "429": {"fn": "Bank.upgrade", "offset": [6715, 6725], "op": "CALLER", "path": "0"}, "430": {"fn": "Bank.upgrade", "offset": [6704, 6714], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "433": {"fn": "Bank.upgrade", "jump": "i", "offset": [6704, 6726], "op": "JUMP", "path": "0"}, "434": {"branch": 39, "fn": "Bank.upgrade", "offset": [6704, 6726], "op": "JUMPDEST", "path": "0"}, "435": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "PUSH2", "path": "0", "value": "0x1CE"}, "438": {"branch": 39, "fn": "Bank.upgrade", "offset": [6696, 6751], "op": "JUMPI", "path": "0"}, "439": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "PUSH1", "path": "0", "value": "0x40"}, "441": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "MLOAD", "path": "0"}, "442": {"op": "PUSH3", "value": "0x461BCD"}, "446": {"op": "PUSH1", "value": "0xE5"}, "448": {"op": "SHL"}, "449": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "DUP2", "path": "0"}, "450": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "MSTORE", "path": "0"}, "451": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "PUSH1", "path": "0", "value": "0x4"}, "453": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "ADD", "path": "0"}, "454": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "PUSH2", "path": "0", "value": "0x18C"}, "457": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "SWAP1", "path": "0"}, "458": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "461": {"fn": "Bank.upgrade", "jump": "i", "offset": [6696, 6751], "op": "JUMP", "path": "0"}, "462": {"fn": "Bank.upgrade", "offset": [6696, 6751], "op": "JUMPDEST", "path": "0"}, "463": {"fn": "Bank.upgrade", "offset": [6779, 6789], "op": "CALLER", "path": "0", "statement": 3}, "464": {"fn": "Bank.upgrade", "offset": [6769, 6778], "op": "PUSH1", "path": "0", "value": "0x0"}, "466": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "SWAP1", "path": "0"}, "467": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "DUP2", "path": "0"}, "468": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "MSTORE", "path": "0"}, "469": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "PUSH1", "path": "0", "value": "0x20"}, "471": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "DUP2", "path": "0"}, "472": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "SWAP1", "path": "0"}, "473": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "MSTORE", "path": "0"}, "474": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "PUSH1", "path": "0", "value": "0x40"}, "476": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "SWAP1", "path": "0"}, "477": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "KECCAK256", "path": "0"}, "478": {"fn": "Bank.upgrade", "offset": [6769, 6790], "op": "SLOAD", "path": "0"}, "479": {"fn": "Bank.upgrade", "offset": [6769, 6802], "op": "DUP2", "path": "0"}, "480": {"branch": 40, "fn": "Bank.upgrade", "offset": [6769, 6802], "op": "EQ", "path": "0"}, "481": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "PUSH2", "path": "0", "value": "0x1FC"}, "484": {"branch": 40, "fn": "Bank.upgrade", "offset": [6761, 6822], "op": "JUMPI", "path": "0"}, "485": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "PUSH1", "path": "0", "value": "0x40"}, "487": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "MLOAD", "path": "0"}, "488": {"op": "PUSH3", "value": "0x461BCD"}, "492": {"op": "PUSH1", "value": "0xE5"}, "494": {"op": "SHL"}, "495": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "DUP2", "path": "0"}, "496": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "MSTORE", "path": "0"}, "497": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "PUSH1", "path": "0", "value": "0x4"}, "499": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "ADD", "path": "0"}, "500": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "PUSH2", "path": "0", "value": "0x18C"}, "503": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "SWAP1", "path": "0"}, "504": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "PUSH2", "path": "0", "value": "0xB8B"}, "507": {"fn": "Bank.upgrade", "jump": "i", "offset": [6761, 6822], "op": "JUMP", "path": "0"}, "508": {"fn": "Bank.upgrade", "offset": [6761, 6822], "op": "JUMPDEST", "path": "0"}, "509": {"fn": "Bank.upgrade", "offset": [6848, 6849], "op": "PUSH1", "path": "0", "statement": 4, "value": "0x4"}, "511": {"fn": "Bank.upgrade", "offset": [6840, 6845], "op": "DUP3", "path": "0"}, "512": {"branch": 41, "fn": "Bank.upgrade", "offset": [6840, 6849], "op": "LT", "path": "0"}, "513": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "PUSH2", "path": "0", "value": "0x23E"}, "516": {"branch": 41, "fn": "Bank.upgrade", "offset": [6832, 6869], "op": "JUMPI", "path": "0"}, "517": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "PUSH1", "path": "0", "value": "0x40"}, "519": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "MLOAD", "path": "0"}, "520": {"op": "PUSH3", "value": "0x461BCD"}, "524": {"op": "PUSH1", "value": "0xE5"}, "526": {"op": "SHL"}, "527": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "DUP2", "path": "0"}, "528": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "MSTORE", "path": "0"}, "529": {"op": "PUSH1", "value": "0x20"}, "531": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "PUSH1", "path": "0", "value": "0x4"}, "533": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "DUP3", "path": "0"}, "534": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "ADD", "path": "0"}, "535": {"op": "MSTORE"}, "536": {"op": "PUSH1", "value": "0xF"}, "538": {"op": "PUSH1", "value": "0x24"}, "540": {"op": "DUP3"}, "541": {"op": "ADD"}, "542": {"op": "MSTORE"}, "543": {"op": "PUSH15", "value": "0x139BDD081D985B1A59081B195D995B"}, "559": {"op": "PUSH1", "value": "0x8A"}, "561": {"op": "SHL"}, "562": {"op": "PUSH1", "value": "0x44"}, "564": {"op": "DUP3"}, "565": {"op": "ADD"}, "566": {"op": "MSTORE"}, "567": {"op": "PUSH1", "value": "0x64"}, "569": {"op": "ADD"}, "570": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "PUSH2", "path": "0", "value": "0x18C"}, "573": {"op": "JUMP"}, "574": {"fn": "Bank.upgrade", "offset": [6832, 6869], "op": "JUMPDEST", "path": "0"}, "575": {"fn": "Bank.upgrade", "offset": [6914, 6924], "op": "CALLER", "path": "0"}, "576": {"fn": "Bank.upgrade", "offset": [6888, 6902], "op": "PUSH1", "path": "0", "value": "0x0"}, "578": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "SWAP1", "path": "0"}, "579": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "DUP2", "path": "0"}, "580": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "MSTORE", "path": "0"}, "581": {"fn": "Bank.upgrade", "offset": [6905, 6913], "op": "PUSH1", "path": "0", "value": "0x2"}, "583": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "PUSH1", "path": "0", "value": "0x20"}, "585": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "MSTORE", "path": "0"}, "586": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "PUSH1", "path": "0", "value": "0x40"}, "588": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "DUP2", "path": "0"}, "589": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "KECCAK256", "path": "0"}, "590": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "SLOAD", "path": "0"}, "591": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "PUSH1", "path": "0", "value": "0xFF"}, "593": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "AND", "path": "0"}, "594": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "SWAP1", "path": "0"}, "595": {"fn": "Bank.upgrade", "offset": [6905, 6925], "op": "PUSH1", "path": "0", "value": "0x1"}, "597": {"fn": "Bank.upgrade", "offset": [6888, 6902], "op": "DUP2", "path": "0"}, "598": {"fn": "Bank.upgrade", "offset": [6967, 6972], "op": "DUP6", "path": "0"}, "599": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "PUSH1", "path": "0", "value": "0x3"}, "601": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "DUP2", "path": "0"}, "602": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "GT", "path": "0"}, "603": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "ISZERO", "path": "0"}, "604": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "PUSH2", "path": "0", "value": "0x267"}, "607": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "JUMPI", "path": "0"}, "608": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "PUSH2", "path": "0", "value": "0x267"}, "611": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "614": {"fn": "Bank.upgrade", "jump": "i", "offset": [6962, 6973], "op": "JUMP", "path": "0"}, "615": {"fn": "Bank.upgrade", "offset": [6962, 6973], "op": "JUMPDEST", "path": "0"}, "616": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH1", "path": "0", "value": "0x3"}, "618": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "DUP2", "path": "0"}, "619": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "GT", "path": "0"}, "620": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "ISZERO", "path": "0"}, "621": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0x278"}, "624": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "JUMPI", "path": "0"}, "625": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0x278"}, "628": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "631": {"fn": "Bank.upgrade", "jump": "i", "offset": [6951, 6974], "op": "JUMP", "path": "0"}, "632": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "JUMPDEST", "path": "0"}, "633": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH1", "path": "0", "value": "0x3"}, "635": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "DUP2", "path": "0"}, "636": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "GT", "path": "0"}, "637": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "ISZERO", "path": "0"}, "638": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0x289"}, "641": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "JUMPI", "path": "0"}, "642": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0x289"}, "645": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "648": {"fn": "Bank.upgrade", "jump": "i", "offset": [6951, 6974], "op": "JUMP", "path": "0"}, "649": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "JUMPDEST", "path": "0"}, "650": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "DUP2", "path": "0"}, "651": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "MSTORE", "path": "0"}, "652": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH1", "path": "0", "value": "0x20"}, "654": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "DUP2", "path": "0"}, "655": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "ADD", "path": "0"}, "656": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "SWAP2", "path": "0"}, "657": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "SWAP1", "path": "0"}, "658": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "SWAP2", "path": "0"}, "659": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "MSTORE", "path": "0"}, "660": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "PUSH1", "path": "0", "value": "0x40"}, "662": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "ADD", "path": "0"}, "663": {"op": "PUSH1", "value": "0x0"}, "665": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "KECCAK256", "path": "0"}, "666": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "SLOAD", "path": "0"}, "667": {"fn": "Bank.upgrade", "offset": [6951, 6974], "op": "SWAP1", "path": "0"}, "668": {"op": "POP"}, "669": {"fn": "Bank.upgrade", "offset": [7006, 7019], "op": "PUSH1", "path": "0", "statement": 5, "value": "0x3"}, "671": {"fn": "Bank.upgrade", "offset": [6993, 7002], "op": "DUP3", "path": "0"}, "672": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "PUSH1", "path": "0", "value": "0x3"}, "674": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "DUP2", "path": "0"}, "675": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "GT", "path": "0"}, "676": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "ISZERO", "path": "0"}, "677": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "PUSH2", "path": "0", "value": "0x2B0"}, "680": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "JUMPI", "path": "0"}, "681": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "PUSH2", "path": "0", "value": "0x2B0"}, "684": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "687": {"fn": "Bank.upgrade", "jump": "i", "offset": [6993, 7019], "op": "JUMP", "path": "0"}, "688": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "JUMPDEST", "path": "0"}, "689": {"fn": "Bank.upgrade", "offset": [6993, 7019], "op": "EQ", "path": "0"}, "690": {"branch": 42, "fn": "Bank.upgrade", "offset": [6993, 7019], "op": "ISZERO", "path": "0"}, "691": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "PUSH2", "path": "0", "value": "0x30C"}, "694": {"branch": 42, "fn": "Bank.upgrade", "offset": [6985, 7061], "op": "JUMPI", "path": "0"}, "695": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "PUSH1", "path": "0", "value": "0x40"}, "697": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "MLOAD", "path": "0"}, "698": {"op": "PUSH3", "value": "0x461BCD"}, "702": {"op": "PUSH1", "value": "0xE5"}, "704": {"op": "SHL"}, "705": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "DUP2", "path": "0"}, "706": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "MSTORE", "path": "0"}, "707": {"op": "PUSH1", "value": "0x20"}, "709": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "PUSH1", "path": "0", "value": "0x4"}, "711": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "DUP3", "path": "0"}, "712": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "ADD", "path": "0"}, "713": {"op": "MSTORE"}, "714": {"op": "PUSH1", "value": "0x25"}, "716": {"op": "PUSH1", "value": "0x24"}, "718": {"op": "DUP3"}, "719": {"op": "ADD"}, "720": {"op": "MSTORE"}, "721": {"op": "PUSH32", "value": "0x596F752063616E6E6F74207570677261646520746869732E2054686973206973"}, "754": {"op": "PUSH1", "value": "0x44"}, "756": {"op": "DUP3"}, "757": {"op": "ADD"}, "758": {"op": "MSTORE"}, "759": {"op": "PUSH5", "value": "0x1036B0BC17"}, "765": {"op": "PUSH1", "value": "0xD9"}, "767": {"op": "SHL"}, "768": {"op": "PUSH1", "value": "0x64"}, "770": {"op": "DUP3"}, "771": {"op": "ADD"}, "772": {"op": "MSTORE"}, "773": {"op": "PUSH1", "value": "0x84"}, "775": {"op": "ADD"}, "776": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "PUSH2", "path": "0", "value": "0x18C"}, "779": {"op": "JUMP"}, "780": {"fn": "Bank.upgrade", "offset": [6985, 7061], "op": "JUMPDEST", "path": "0"}, "781": {"fn": "Bank.upgrade", "offset": [7096, 7106], "op": "CALLER", "path": "0", "statement": 6}, "782": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "PUSH1", "path": "0", "value": "0x0"}, "784": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "SWAP1", "path": "0"}, "785": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "DUP2", "path": "0"}, "786": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "MSTORE", "path": "0"}, "787": {"fn": "Bank.upgrade", "offset": [7087, 7095], "op": "PUSH1", "path": "0", "value": "0x2"}, "789": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "PUSH1", "path": "0", "value": "0x20"}, "791": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "MSTORE", "path": "0"}, "792": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "PUSH1", "path": "0", "value": "0x40"}, "794": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "SWAP1", "path": "0"}, "795": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "KECCAK256", "path": "0"}, "796": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "SLOAD", "path": "0"}, "797": {"fn": "Bank.upgrade", "offset": [7111, 7116], "op": "DUP5", "path": "0"}, "798": {"fn": "Bank.upgrade", "offset": [7111, 7116], "op": "SWAP1", "path": "0"}, "799": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "PUSH1", "path": "0", "value": "0xFF"}, "801": {"fn": "Bank.upgrade", "offset": [7087, 7107], "op": "AND", "path": "0"}, "802": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "PUSH1", "path": "0", "value": "0x3"}, "804": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "DUP2", "path": "0"}, "805": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "GT", "path": "0"}, "806": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "ISZERO", "path": "0"}, "807": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "PUSH2", "path": "0", "value": "0x332"}, "810": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "JUMPI", "path": "0"}, "811": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "PUSH2", "path": "0", "value": "0x332"}, "814": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "817": {"fn": "Bank.upgrade", "jump": "i", "offset": [7079, 7108], "op": "JUMP", "path": "0"}, "818": {"fn": "Bank.upgrade", "offset": [7079, 7108], "op": "JUMPDEST", "path": "0"}, "819": {"branch": 43, "fn": "Bank.upgrade", "offset": [7079, 7116], "op": "LT", "path": "0"}, "820": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "PUSH2", "path": "0", "value": "0x376"}, "823": {"branch": 43, "fn": "Bank.upgrade", "offset": [7071, 7141], "op": "JUMPI", "path": "0"}, "824": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "PUSH1", "path": "0", "value": "0x40"}, "826": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "MLOAD", "path": "0"}, "827": {"op": "PUSH3", "value": "0x461BCD"}, "831": {"op": "PUSH1", "value": "0xE5"}, "833": {"op": "SHL"}, "834": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "DUP2", "path": "0"}, "835": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "MSTORE", "path": "0"}, "836": {"op": "PUSH1", "value": "0x20"}, "838": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "PUSH1", "path": "0", "value": "0x4"}, "840": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "DUP3", "path": "0"}, "841": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "ADD", "path": "0"}, "842": {"op": "MSTORE"}, "843": {"op": "PUSH1", "value": "0x14"}, "845": {"op": "PUSH1", "value": "0x24"}, "847": {"op": "DUP3"}, "848": {"op": "ADD"}, "849": {"op": "MSTORE"}, "850": {"op": "PUSH20", "value": "0x596F752063616E6E6F7420646F776E6772616465"}, "871": {"op": "PUSH1", "value": "0x60"}, "873": {"op": "SHL"}, "874": {"op": "PUSH1", "value": "0x44"}, "876": {"op": "DUP3"}, "877": {"op": "ADD"}, "878": {"op": "MSTORE"}, "879": {"op": "PUSH1", "value": "0x64"}, "881": {"op": "ADD"}, "882": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "PUSH2", "path": "0", "value": "0x18C"}, "885": {"op": "JUMP"}, "886": {"fn": "Bank.upgrade", "offset": [7071, 7141], "op": "JUMPDEST", "path": "0"}, "887": {"fn": "Bank.upgrade", "offset": [7173, 7178], "op": "DUP1", "path": "0", "statement": 7}, "888": {"fn": "Bank.upgrade", "offset": [7160, 7169], "op": "CALLVALUE", "path": "0"}, "889": {"fn": "Bank.upgrade", "offset": [7160, 7178], "op": "LT", "path": "0"}, "890": {"branch": 44, "fn": "Bank.upgrade", "offset": [7160, 7178], "op": "ISZERO", "path": "0"}, "891": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "PUSH2", "path": "0", "value": "0x3C6"}, "894": {"branch": 44, "fn": "Bank.upgrade", "offset": [7152, 7214], "op": "JUMPI", "path": "0"}, "895": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "PUSH1", "path": "0", "value": "0x40"}, "897": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "MLOAD", "path": "0"}, "898": {"op": "PUSH3", "value": "0x461BCD"}, "902": {"op": "PUSH1", "value": "0xE5"}, "904": {"op": "SHL"}, "905": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "DUP2", "path": "0"}, "906": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "MSTORE", "path": "0"}, "907": {"op": "PUSH1", "value": "0x20"}, "909": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "PUSH1", "path": "0", "value": "0x4"}, "911": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "DUP3", "path": "0"}, "912": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "ADD", "path": "0"}, "913": {"op": "MSTORE"}, "914": {"op": "PUSH1", "value": "0x1F"}, "916": {"op": "PUSH1", "value": "0x24"}, "918": {"op": "DUP3"}, "919": {"op": "ADD"}, "920": {"op": "MSTORE"}, "921": {"op": "PUSH32", "value": "0x506C616E20707269636520686967686572207468616E207061796D656E742E00"}, "954": {"op": "PUSH1", "value": "0x44"}, "956": {"op": "DUP3"}, "957": {"op": "ADD"}, "958": {"op": "MSTORE"}, "959": {"op": "PUSH1", "value": "0x64"}, "961": {"op": "ADD"}, "962": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "PUSH2", "path": "0", "value": "0x18C"}, "965": {"op": "JUMP"}, "966": {"fn": "Bank.upgrade", "offset": [7152, 7214], "op": "JUMPDEST", "path": "0"}, "967": {"fn": "Bank.upgrade", "offset": [7225, 7240], "op": "PUSH1", "path": "0", "value": "0x0"}, "969": {"fn": "Bank.upgrade", "offset": [7243, 7260], "op": "PUSH2", "path": "0", "value": "0x3D2"}, "972": {"fn": "Bank.upgrade", "offset": [7255, 7260], "op": "DUP3", "path": "0"}, "973": {"fn": "Bank.upgrade", "offset": [7243, 7252], "op": "CALLVALUE", "path": "0"}, "974": {"fn": "Bank.upgrade", "offset": [7243, 7260], "op": "PUSH2", "path": "0", "value": "0xBCA"}, "977": {"fn": "Bank.upgrade", "jump": "i", "offset": [7243, 7260], "op": "JUMP", "path": "0"}, "978": {"fn": "Bank.upgrade", "offset": [7243, 7260], "op": "JUMPDEST", "path": "0"}, "979": {"fn": "Bank.upgrade", "offset": [7225, 7260], "op": "SWAP1", "path": "0"}, "980": {"fn": "Bank.upgrade", "offset": [7225, 7260], "op": "POP", "path": "0"}, "981": {"fn": "Bank.upgrade", "offset": [7299, 7304], "op": "DUP5", "path": "0", "statement": 8}, "982": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "PUSH1", "path": "0", "value": "0x3"}, "984": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "DUP2", "path": "0"}, "985": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "GT", "path": "0"}, "986": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "ISZERO", "path": "0"}, "987": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "PUSH2", "path": "0", "value": "0x3E6"}, "990": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "JUMPI", "path": "0"}, "991": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "PUSH2", "path": "0", "value": "0x3E6"}, "994": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "997": {"fn": "Bank.upgrade", "jump": "i", "offset": [7294, 7305], "op": "JUMP", "path": "0"}, "998": {"fn": "Bank.upgrade", "offset": [7294, 7305], "op": "JUMPDEST", "path": "0"}, "999": {"fn": "Bank.upgrade", "offset": [7280, 7290], "op": "CALLER", "path": "0"}, "1000": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "PUSH1", "path": "0", "value": "0x0"}, "1002": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "SWAP1", "path": "0"}, "1003": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "DUP2", "path": "0"}, "1004": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "MSTORE", "path": "0"}, "1005": {"fn": "Bank.upgrade", "offset": [7271, 7279], "op": "PUSH1", "path": "0", "value": "0x2"}, "1007": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "PUSH1", "path": "0", "value": "0x20"}, "1009": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "MSTORE", "path": "0"}, "1010": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "PUSH1", "path": "0", "value": "0x40"}, "1012": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "SWAP1", "path": "0"}, "1013": {"fn": "Bank.upgrade", "offset": [7271, 7291], "op": "KECCAK256", "path": "0"}, "1014": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "DUP1", "path": "0"}, "1015": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "SLOAD", "path": "0"}, "1016": {"op": "PUSH1", "value": "0xFF"}, "1018": {"op": "NOT"}, "1019": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "AND", "path": "0"}, "1020": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "PUSH1", "path": "0", "value": "0x1"}, "1022": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "DUP4", "path": "0"}, "1023": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "PUSH1", "path": "0", "value": "0x3"}, "1025": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "DUP2", "path": "0"}, "1026": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "GT", "path": "0"}, "1027": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "ISZERO", "path": "0"}, "1028": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "PUSH2", "path": "0", "value": "0x40F"}, "1031": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "JUMPI", "path": "0"}, "1032": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "PUSH2", "path": "0", "value": "0x40F"}, "1035": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "1038": {"fn": "Bank.upgrade", "jump": "i", "offset": [7271, 7305], "op": "JUMP", "path": "0"}, "1039": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "JUMPDEST", "path": "0"}, "1040": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "MUL", "path": "0"}, "1041": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "OR", "path": "0"}, "1042": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "SWAP1", "path": "0"}, "1043": {"fn": "Bank.upgrade", "offset": [7271, 7305], "op": "SSTORE", "path": "0"}, "1044": {"op": "POP"}, "1045": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH1", "path": "0", "statement": 9, "value": "0x40"}, "1047": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "MLOAD", "path": "0"}, "1048": {"fn": "Bank.upgrade", "offset": [7323, 7333], "op": "CALLER", "path": "0"}, "1049": {"fn": "Bank.upgrade", "offset": [7323, 7333], "op": "SWAP1", "path": "0"}, "1050": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP3", "path": "0"}, "1051": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "ISZERO", "path": "0"}, "1052": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "1055": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "MUL", "path": "0"}, "1056": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "SWAP1", "path": "0"}, "1057": {"fn": "Bank.upgrade", "offset": [7344, 7351], "op": "DUP4", "path": "0"}, "1058": {"fn": "Bank.upgrade", "offset": [7344, 7351], "op": "SWAP1", "path": "0"}, "1059": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH1", "path": "0", "value": "0x0"}, "1061": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP2", "path": "0"}, "1062": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP2", "path": "0"}, "1063": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP2", "path": "0"}, "1064": {"fn": "Bank.upgrade", "offset": [7344, 7351], "op": "DUP6", "path": "0"}, "1065": {"fn": "Bank.upgrade", "offset": [7323, 7333], "op": "DUP9", "path": "0"}, "1066": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP9", "path": "0"}, "1067": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "CALL", "path": "0"}, "1068": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "SWAP4", "path": "0"}, "1069": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "POP", "path": "0"}, "1070": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "POP", "path": "0"}, "1071": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "POP", "path": "0"}, "1072": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "POP", "path": "0"}, "1073": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "ISZERO", "path": "0"}, "1074": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP1", "path": "0"}, "1075": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "ISZERO", "path": "0"}, "1076": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH2", "path": "0", "value": "0x441"}, "1079": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "JUMPI", "path": "0"}, "1080": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "RETURNDATASIZE", "path": "0"}, "1081": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH1", "path": "0", "value": "0x0"}, "1083": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "DUP1", "path": "0"}, "1084": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "RETURNDATACOPY", "path": "0"}, "1085": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "RETURNDATASIZE", "path": "0"}, "1086": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "PUSH1", "path": "0", "value": "0x0"}, "1088": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "REVERT", "path": "0"}, "1089": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "JUMPDEST", "path": "0"}, "1090": {"fn": "Bank.upgrade", "offset": [7315, 7352], "op": "POP", "path": "0"}, "1091": {"fn": "Bank.upgrade", "offset": [6686, 7359], "op": "POP", "path": "0"}, "1092": {"fn": "Bank.upgrade", "offset": [6686, 7359], "op": "POP", "path": "0"}, "1093": {"fn": "Bank.upgrade", "offset": [6686, 7359], "op": "POP", "path": "0"}, "1094": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "POP", "path": "0"}, "1095": {"fn": "Bank.upgrade", "offset": [6621, 7359], "op": "POP", "path": "0"}, "1096": {"fn": "Bank.upgrade", "jump": "o", "offset": [6621, 7359], "op": "JUMP", "path": "0"}, "1097": {"fn": "Bank.changePassword", "offset": [4907, 5242], "op": "JUMPDEST", "path": "0"}, "1098": {"fn": "Bank.changePassword", "offset": [4998, 5020], "op": "PUSH2", "path": "0", "statement": 10, "value": "0x452"}, "1101": {"fn": "Bank.changePassword", "offset": [5009, 5019], "op": "CALLER", "path": "0"}, "1102": {"fn": "Bank.changePassword", "offset": [4998, 5008], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "1105": {"fn": "Bank.changePassword", "jump": "i", "offset": [4998, 5020], "op": "JUMP", "path": "0"}, "1106": {"branch": 45, "fn": "Bank.changePassword", "offset": [4998, 5020], "op": "JUMPDEST", "path": "0"}, "1107": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "PUSH2", "path": "0", "value": "0x46E"}, "1110": {"branch": 45, "fn": "Bank.changePassword", "offset": [4990, 5045], "op": "JUMPI", "path": "0"}, "1111": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "PUSH1", "path": "0", "value": "0x40"}, "1113": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "MLOAD", "path": "0"}, "1114": {"op": "PUSH3", "value": "0x461BCD"}, "1118": {"op": "PUSH1", "value": "0xE5"}, "1120": {"op": "SHL"}, "1121": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "DUP2", "path": "0"}, "1122": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "MSTORE", "path": "0"}, "1123": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "PUSH1", "path": "0", "value": "0x4"}, "1125": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "ADD", "path": "0"}, "1126": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1129": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "SWAP1", "path": "0"}, "1130": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "1133": {"fn": "Bank.changePassword", "jump": "i", "offset": [4990, 5045], "op": "JUMP", "path": "0"}, "1134": {"fn": "Bank.changePassword", "offset": [4990, 5045], "op": "JUMPDEST", "path": "0"}, "1135": {"fn": "Bank.changePassword", "offset": [5073, 5083], "op": "CALLER", "path": "0", "statement": 11}, "1136": {"fn": "Bank.changePassword", "offset": [5063, 5072], "op": "PUSH1", "path": "0", "value": "0x0"}, "1138": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "SWAP1", "path": "0"}, "1139": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "DUP2", "path": "0"}, "1140": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "MSTORE", "path": "0"}, "1141": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "PUSH1", "path": "0", "value": "0x20"}, "1143": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "DUP2", "path": "0"}, "1144": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "SWAP1", "path": "0"}, "1145": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "MSTORE", "path": "0"}, "1146": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "PUSH1", "path": "0", "value": "0x40"}, "1148": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "SWAP1", "path": "0"}, "1149": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "KECCAK256", "path": "0"}, "1150": {"fn": "Bank.changePassword", "offset": [5063, 5084], "op": "SLOAD", "path": "0"}, "1151": {"fn": "Bank.changePassword", "offset": [5063, 5099], "op": "DUP3", "path": "0"}, "1152": {"branch": 46, "fn": "Bank.changePassword", "offset": [5063, 5099], "op": "EQ", "path": "0"}, "1153": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "PUSH2", "path": "0", "value": "0x49C"}, "1156": {"branch": 46, "fn": "Bank.changePassword", "offset": [5055, 5119], "op": "JUMPI", "path": "0"}, "1157": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "PUSH1", "path": "0", "value": "0x40"}, "1159": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "MLOAD", "path": "0"}, "1160": {"op": "PUSH3", "value": "0x461BCD"}, "1164": {"op": "PUSH1", "value": "0xE5"}, "1166": {"op": "SHL"}, "1167": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "DUP2", "path": "0"}, "1168": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "MSTORE", "path": "0"}, "1169": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "PUSH1", "path": "0", "value": "0x4"}, "1171": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "ADD", "path": "0"}, "1172": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1175": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "SWAP1", "path": "0"}, "1176": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "PUSH2", "path": "0", "value": "0xB8B"}, "1179": {"fn": "Bank.changePassword", "jump": "i", "offset": [5055, 5119], "op": "JUMP", "path": "0"}, "1180": {"fn": "Bank.changePassword", "offset": [5055, 5119], "op": "JUMPDEST", "path": "0"}, "1181": {"fn": "Bank.changePassword", "offset": [5210, 5220], "op": "CALLER", "path": "0", "statement": 12}, "1182": {"fn": "Bank.changePassword", "offset": [5200, 5209], "op": "PUSH1", "path": "0", "value": "0x0"}, "1184": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "SWAP1", "path": "0"}, "1185": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "DUP2", "path": "0"}, "1186": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "MSTORE", "path": "0"}, "1187": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "PUSH1", "path": "0", "value": "0x20"}, "1189": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "DUP2", "path": "0"}, "1190": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "SWAP1", "path": "0"}, "1191": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "MSTORE", "path": "0"}, "1192": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "PUSH1", "path": "0", "value": "0x40"}, "1194": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "SWAP1", "path": "0"}, "1195": {"fn": "Bank.changePassword", "offset": [5200, 5221], "op": "KECCAK256", "path": "0"}, "1196": {"fn": "Bank.changePassword", "offset": [5200, 5235], "op": "SSTORE", "path": "0"}, "1197": {"op": "POP"}, "1198": {"fn": "Bank.changePassword", "jump": "o", "offset": [4907, 5242], "op": "JUMP", "path": "0"}, "1199": {"fn": "Bank.createAccountFor", "offset": [3433, 4109], "op": "JUMPDEST", "path": "0"}, "1200": {"fn": "Bank.createAccountFor", "offset": [3579, 3589], "op": "CALLER", "path": "0", "statement": 13}, "1201": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "PUSH2", "path": "0", "value": "0x4F3"}, "1204": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "JUMPI", "path": "0"}, "1205": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "PUSH1", "path": "0", "value": "0x40"}, "1207": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "MLOAD", "path": "0"}, "1208": {"op": "PUSH3", "value": "0x461BCD"}, "1212": {"op": "PUSH1", "value": "0xE5"}, "1214": {"op": "SHL"}, "1215": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "DUP2", "path": "0"}, "1216": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "MSTORE", "path": "0"}, "1217": {"op": "PUSH1", "value": "0x20"}, "1219": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "PUSH1", "path": "0", "value": "0x4"}, "1221": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "DUP3", "path": "0"}, "1222": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "ADD", "path": "0"}, "1223": {"op": "MSTORE"}, "1224": {"op": "PUSH1", "value": "0x14"}, "1226": {"op": "PUSH1", "value": "0x24"}, "1228": {"op": "DUP3"}, "1229": {"op": "ADD"}, "1230": {"op": "MSTORE"}, "1231": {"op": "PUSH20", "value": "0x21B0B63610333937B690181030B2323932B9B997"}, "1252": {"op": "PUSH1", "value": "0x61"}, "1254": {"op": "SHL"}, "1255": {"op": "PUSH1", "value": "0x44"}, "1257": {"op": "DUP3"}, "1258": {"op": "ADD"}, "1259": {"op": "MSTORE"}, "1260": {"op": "PUSH1", "value": "0x64"}, "1262": {"op": "ADD"}, "1263": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1266": {"op": "JUMP"}, "1267": {"fn": "Bank.createAccountFor", "offset": [3571, 3628], "op": "JUMPDEST", "path": "0"}, "1268": {"op": "PUSH1", "value": "0x1"}, "1270": {"op": "PUSH1", "value": "0x1"}, "1272": {"op": "PUSH1", "value": "0xA0"}, "1274": {"op": "SHL"}, "1275": {"op": "SUB"}, "1276": {"fn": "Bank.createAccountFor", "offset": [3698, 3720], "op": "DUP3", "path": "0", "statement": 14}, "1277": {"branch": 47, "fn": "Bank.createAccountFor", "offset": [3698, 3720], "op": "AND", "path": "0"}, "1278": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "PUSH2", "path": "0", "value": "0x53E"}, "1281": {"branch": 47, "fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "JUMPI", "path": "0"}, "1282": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "PUSH1", "path": "0", "value": "0x40"}, "1284": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "MLOAD", "path": "0"}, "1285": {"op": "PUSH3", "value": "0x461BCD"}, "1289": {"op": "PUSH1", "value": "0xE5"}, "1291": {"op": "SHL"}, "1292": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "DUP2", "path": "0"}, "1293": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "MSTORE", "path": "0"}, "1294": {"op": "PUSH1", "value": "0x20"}, "1296": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "PUSH1", "path": "0", "value": "0x4"}, "1298": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "DUP3", "path": "0"}, "1299": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "ADD", "path": "0"}, "1300": {"op": "MSTORE"}, "1301": {"op": "PUSH1", "value": "0x12"}, "1303": {"op": "PUSH1", "value": "0x24"}, "1305": {"op": "DUP3"}, "1306": {"op": "ADD"}, "1307": {"op": "MSTORE"}, "1308": {"op": "PUSH18", "value": "0x21B0B636103A3790181030B2323932B9B997"}, "1327": {"op": "PUSH1", "value": "0x71"}, "1329": {"op": "SHL"}, "1330": {"op": "PUSH1", "value": "0x44"}, "1332": {"op": "DUP3"}, "1333": {"op": "ADD"}, "1334": {"op": "MSTORE"}, "1335": {"op": "PUSH1", "value": "0x64"}, "1337": {"op": "ADD"}, "1338": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1341": {"op": "JUMP"}, "1342": {"fn": "Bank.createAccountFor", "offset": [3690, 3743], "op": "JUMPDEST", "path": "0"}, "1343": {"fn": "Bank.createAccountFor", "offset": [3814, 3834], "op": "PUSH2", "path": "0", "statement": 15, "value": "0x547"}, "1346": {"fn": "Bank.createAccountFor", "offset": [3825, 3833], "op": "DUP3", "path": "0"}, "1347": {"fn": "Bank.createAccountFor", "offset": [3814, 3824], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "1350": {"fn": "Bank.createAccountFor", "jump": "i", "offset": [3814, 3834], "op": "JUMP", "path": "0"}, "1351": {"fn": "Bank.createAccountFor", "offset": [3814, 3834], "op": "JUMPDEST", "path": "0"}, "1352": {"branch": 48, "fn": "Bank.createAccountFor", "offset": [3813, 3834], "op": "ISZERO", "path": "0"}, "1353": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "PUSH2", "path": "0", "value": "0x58E"}, "1356": {"branch": 48, "fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "JUMPI", "path": "0"}, "1357": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "PUSH1", "path": "0", "value": "0x40"}, "1359": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "MLOAD", "path": "0"}, "1360": {"op": "PUSH3", "value": "0x461BCD"}, "1364": {"op": "PUSH1", "value": "0xE5"}, "1366": {"op": "SHL"}, "1367": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "DUP2", "path": "0"}, "1368": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "MSTORE", "path": "0"}, "1369": {"op": "PUSH1", "value": "0x20"}, "1371": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "PUSH1", "path": "0", "value": "0x4"}, "1373": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "DUP3", "path": "0"}, "1374": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "ADD", "path": "0"}, "1375": {"op": "MSTORE"}, "1376": {"op": "PUSH1", "value": "0x17"}, "1378": {"op": "PUSH1", "value": "0x24"}, "1380": {"op": "DUP3"}, "1381": {"op": "ADD"}, "1382": {"op": "MSTORE"}, "1383": {"op": "PUSH23", "value": "0x20B2323932B9B9903430B99030B71030B1B1B7BAB73A17"}, "1407": {"op": "PUSH1", "value": "0x49"}, "1409": {"op": "SHL"}, "1410": {"op": "PUSH1", "value": "0x44"}, "1412": {"op": "DUP3"}, "1413": {"op": "ADD"}, "1414": {"op": "MSTORE"}, "1415": {"op": "PUSH1", "value": "0x64"}, "1417": {"op": "ADD"}, "1418": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1421": {"op": "JUMP"}, "1422": {"fn": "Bank.createAccountFor", "offset": [3805, 3862], "op": "JUMPDEST", "path": "0"}, "1423": {"op": "PUSH1", "value": "0x1"}, "1425": {"op": "PUSH1", "value": "0x1"}, "1427": {"op": "PUSH1", "value": "0xA0"}, "1429": {"op": "SHL"}, "1430": {"op": "SUB"}, "1431": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "SWAP2", "path": "0", "statement": 16}, "1432": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "SWAP1", "path": "0"}, "1433": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "SWAP2", "path": "0"}, "1434": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "AND", "path": "0"}, "1435": {"fn": "Bank.createAccountFor", "offset": [4032, 4041], "op": "PUSH1", "path": "0", "value": "0x0"}, "1437": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "SWAP1", "path": "0"}, "1438": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "DUP2", "path": "0"}, "1439": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "MSTORE", "path": "0"}, "1440": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "PUSH1", "path": "0", "value": "0x20"}, "1442": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "DUP2", "path": "0"}, "1443": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "DUP2", "path": "0"}, "1444": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "MSTORE", "path": "0"}, "1445": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "PUSH1", "path": "0", "value": "0x40"}, "1447": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "DUP1", "path": "0"}, "1448": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "DUP4", "path": "0"}, "1449": {"fn": "Bank.createAccountFor", "offset": [4032, 4051], "op": "KECCAK256", "path": "0"}, "1450": {"fn": "Bank.createAccountFor", "offset": [4032, 4062], "op": "SWAP4", "path": "0"}, "1451": {"fn": "Bank.createAccountFor", "offset": [4032, 4062], "op": "SWAP1", "path": "0"}, "1452": {"fn": "Bank.createAccountFor", "offset": [4032, 4062], "op": "SWAP4", "path": "0"}, "1453": {"fn": "Bank.createAccountFor", "offset": [4032, 4062], "op": "SSTORE", "path": "0"}, "1454": {"fn": "Bank.createAccountFor", "offset": [4072, 4080], "op": "PUSH1", "path": "0", "statement": 17, "value": "0x2"}, "1456": {"fn": "Bank.createAccountFor", "offset": [4072, 4090], "op": "SWAP1", "path": "0"}, "1457": {"fn": "Bank.createAccountFor", "offset": [4072, 4090], "op": "MSTORE", "path": "0"}, "1458": {"fn": "Bank.createAccountFor", "offset": [4072, 4090], "op": "KECCAK256", "path": "0"}, "1459": {"fn": "Bank.createAccountFor", "offset": [4072, 4102], "op": "DUP1", "path": "0"}, "1460": {"fn": "Bank.createAccountFor", "offset": [4072, 4102], "op": "SLOAD", "path": "0"}, "1461": {"op": "PUSH1", "value": "0xFF"}, "1463": {"op": "NOT"}, "1464": {"fn": "Bank.createAccountFor", "offset": [4072, 4102], "op": "AND", "path": "0"}, "1465": {"fn": "Bank.createAccountFor", "offset": [4072, 4102], "op": "SWAP1", "path": "0"}, "1466": {"fn": "Bank.createAccountFor", "offset": [4072, 4102], "op": "SSTORE", "path": "0"}, "1467": {"fn": "Bank.createAccountFor", "jump": "o", "offset": [3433, 4109], "op": "JUMP", "path": "0"}, "1468": {"fn": "Bank.withdraw", "offset": [5939, 6564], "op": "JUMPDEST", "path": "0"}, "1469": {"fn": "Bank.withdraw", "offset": [6024, 6046], "op": "PUSH2", "path": "0", "statement": 18, "value": "0x5C5"}, "1472": {"fn": "Bank.withdraw", "offset": [6035, 6045], "op": "CALLER", "path": "0"}, "1473": {"fn": "Bank.withdraw", "offset": [6024, 6034], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "1476": {"fn": "Bank.withdraw", "jump": "i", "offset": [6024, 6046], "op": "JUMP", "path": "0"}, "1477": {"branch": 49, "fn": "Bank.withdraw", "offset": [6024, 6046], "op": "JUMPDEST", "path": "0"}, "1478": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "PUSH2", "path": "0", "value": "0x5E1"}, "1481": {"branch": 49, "fn": "Bank.withdraw", "offset": [6016, 6071], "op": "JUMPI", "path": "0"}, "1482": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "PUSH1", "path": "0", "value": "0x40"}, "1484": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "MLOAD", "path": "0"}, "1485": {"op": "PUSH3", "value": "0x461BCD"}, "1489": {"op": "PUSH1", "value": "0xE5"}, "1491": {"op": "SHL"}, "1492": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "DUP2", "path": "0"}, "1493": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "MSTORE", "path": "0"}, "1494": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "PUSH1", "path": "0", "value": "0x4"}, "1496": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "ADD", "path": "0"}, "1497": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1500": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "SWAP1", "path": "0"}, "1501": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "1504": {"fn": "Bank.withdraw", "jump": "i", "offset": [6016, 6071], "op": "JUMP", "path": "0"}, "1505": {"fn": "Bank.withdraw", "offset": [6016, 6071], "op": "JUMPDEST", "path": "0"}, "1506": {"fn": "Bank.withdraw", "offset": [6099, 6109], "op": "CALLER", "path": "0", "statement": 19}, "1507": {"fn": "Bank.withdraw", "offset": [6089, 6098], "op": "PUSH1", "path": "0", "value": "0x0"}, "1509": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "SWAP1", "path": "0"}, "1510": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "DUP2", "path": "0"}, "1511": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "MSTORE", "path": "0"}, "1512": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "PUSH1", "path": "0", "value": "0x20"}, "1514": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "DUP2", "path": "0"}, "1515": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "SWAP1", "path": "0"}, "1516": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "MSTORE", "path": "0"}, "1517": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "PUSH1", "path": "0", "value": "0x40"}, "1519": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "SWAP1", "path": "0"}, "1520": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "KECCAK256", "path": "0"}, "1521": {"fn": "Bank.withdraw", "offset": [6089, 6110], "op": "SLOAD", "path": "0"}, "1522": {"fn": "Bank.withdraw", "offset": [6089, 6122], "op": "DUP2", "path": "0"}, "1523": {"branch": 50, "fn": "Bank.withdraw", "offset": [6089, 6122], "op": "EQ", "path": "0"}, "1524": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "PUSH2", "path": "0", "value": "0x60F"}, "1527": {"branch": 50, "fn": "Bank.withdraw", "offset": [6081, 6142], "op": "JUMPI", "path": "0"}, "1528": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "PUSH1", "path": "0", "value": "0x40"}, "1530": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "MLOAD", "path": "0"}, "1531": {"op": "PUSH3", "value": "0x461BCD"}, "1535": {"op": "PUSH1", "value": "0xE5"}, "1537": {"op": "SHL"}, "1538": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "DUP2", "path": "0"}, "1539": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "MSTORE", "path": "0"}, "1540": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "PUSH1", "path": "0", "value": "0x4"}, "1542": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "ADD", "path": "0"}, "1543": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1546": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "SWAP1", "path": "0"}, "1547": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "PUSH2", "path": "0", "value": "0xB8B"}, "1550": {"fn": "Bank.withdraw", "jump": "i", "offset": [6081, 6142], "op": "JUMP", "path": "0"}, "1551": {"fn": "Bank.withdraw", "offset": [6081, 6142], "op": "JUMPDEST", "path": "0"}, "1552": {"fn": "Bank.withdraw", "offset": [6160, 6169], "op": "CALLVALUE", "path": "0", "statement": 20}, "1553": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "PUSH2", "path": "0", "value": "0x650"}, "1556": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "JUMPI", "path": "0"}, "1557": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "PUSH1", "path": "0", "value": "0x40"}, "1559": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "MLOAD", "path": "0"}, "1560": {"op": "PUSH3", "value": "0x461BCD"}, "1564": {"op": "PUSH1", "value": "0xE5"}, "1566": {"op": "SHL"}, "1567": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "DUP2", "path": "0"}, "1568": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "MSTORE", "path": "0"}, "1569": {"op": "PUSH1", "value": "0x20"}, "1571": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "PUSH1", "path": "0", "value": "0x4"}, "1573": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "DUP3", "path": "0"}, "1574": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "ADD", "path": "0"}, "1575": {"op": "MSTORE"}, "1576": {"op": "PUSH1", "value": "0x11"}, "1578": {"op": "PUSH1", "value": "0x24"}, "1580": {"op": "DUP3"}, "1581": {"op": "ADD"}, "1582": {"op": "MSTORE"}, "1583": {"op": "PUSH17", "value": "0x43616E6E6F74207769746864726177203"}, "1601": {"op": "PUSH1", "value": "0x7C"}, "1603": {"op": "SHL"}, "1604": {"op": "PUSH1", "value": "0x44"}, "1606": {"op": "DUP3"}, "1607": {"op": "ADD"}, "1608": {"op": "MSTORE"}, "1609": {"op": "PUSH1", "value": "0x64"}, "1611": {"op": "ADD"}, "1612": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1615": {"op": "JUMP"}, "1616": {"fn": "Bank.withdraw", "offset": [6152, 6196], "op": "JUMPDEST", "path": "0"}, "1617": {"fn": "Bank.withdraw", "offset": [6233, 6243], "op": "CALLER", "path": "0"}, "1618": {"fn": "Bank.withdraw", "offset": [6207, 6221], "op": "PUSH1", "path": "0", "value": "0x0"}, "1620": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "SWAP1", "path": "0"}, "1621": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "DUP2", "path": "0"}, "1622": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "MSTORE", "path": "0"}, "1623": {"fn": "Bank.withdraw", "offset": [6224, 6232], "op": "PUSH1", "path": "0", "value": "0x2"}, "1625": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "PUSH1", "path": "0", "value": "0x20"}, "1627": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "MSTORE", "path": "0"}, "1628": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "PUSH1", "path": "0", "value": "0x40"}, "1630": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "DUP2", "path": "0"}, "1631": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "KECCAK256", "path": "0"}, "1632": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "SLOAD", "path": "0"}, "1633": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "PUSH1", "path": "0", "value": "0xFF"}, "1635": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "AND", "path": "0"}, "1636": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "SWAP1", "path": "0"}, "1637": {"fn": "Bank.withdraw", "offset": [6271, 6281], "op": "PUSH1", "path": "0", "value": "0x3"}, "1639": {"fn": "Bank.withdraw", "offset": [6207, 6221], "op": "DUP2", "path": "0"}, "1640": {"fn": "Bank.withdraw", "offset": [6224, 6244], "op": "DUP4", "path": "0"}, "1641": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "DUP3", "path": "0"}, "1642": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "DUP2", "path": "0"}, "1643": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "GT", "path": "0"}, "1644": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "ISZERO", "path": "0"}, "1645": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0x678"}, "1648": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "JUMPI", "path": "0"}, "1649": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0x678"}, "1652": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "1655": {"fn": "Bank.withdraw", "jump": "i", "offset": [6271, 6292], "op": "JUMP", "path": "0"}, "1656": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "JUMPDEST", "path": "0"}, "1657": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH1", "path": "0", "value": "0x3"}, "1659": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "DUP2", "path": "0"}, "1660": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "GT", "path": "0"}, "1661": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "ISZERO", "path": "0"}, "1662": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0x689"}, "1665": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "JUMPI", "path": "0"}, "1666": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0x689"}, "1669": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "1672": {"fn": "Bank.withdraw", "jump": "i", "offset": [6271, 6292], "op": "JUMP", "path": "0"}, "1673": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "JUMPDEST", "path": "0"}, "1674": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "DUP2", "path": "0"}, "1675": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "MSTORE", "path": "0"}, "1676": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH1", "path": "0", "value": "0x20"}, "1678": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "ADD", "path": "0"}, "1679": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "SWAP1", "path": "0"}, "1680": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "DUP2", "path": "0"}, "1681": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "MSTORE", "path": "0"}, "1682": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH1", "path": "0", "value": "0x20"}, "1684": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "ADD", "path": "0"}, "1685": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "PUSH1", "path": "0", "value": "0x0"}, "1687": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "KECCAK256", "path": "0"}, "1688": {"fn": "Bank.withdraw", "offset": [6271, 6292], "op": "SLOAD", "path": "0"}, "1689": {"fn": "Bank.withdraw", "offset": [6254, 6292], "op": "SWAP1", "path": "0"}, "1690": {"fn": "Bank.withdraw", "offset": [6254, 6292], "op": "POP", "path": "0"}, "1691": {"fn": "Bank.withdraw", "offset": [6324, 6333], "op": "DUP1", "path": "0", "statement": 21}, "1692": {"fn": "Bank.withdraw", "offset": [6311, 6320], "op": "CALLVALUE", "path": "0"}, "1693": {"fn": "Bank.withdraw", "offset": [6311, 6333], "op": "GT", "path": "0"}, "1694": {"branch": 51, "fn": "Bank.withdraw", "offset": [6311, 6333], "op": "ISZERO", "path": "0"}, "1695": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "PUSH2", "path": "0", "value": "0x6F8"}, "1698": {"branch": 51, "fn": "Bank.withdraw", "offset": [6303, 6375], "op": "JUMPI", "path": "0"}, "1699": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "PUSH1", "path": "0", "value": "0x40"}, "1701": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "MLOAD", "path": "0"}, "1702": {"op": "PUSH3", "value": "0x461BCD"}, "1706": {"op": "PUSH1", "value": "0xE5"}, "1708": {"op": "SHL"}, "1709": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "DUP2", "path": "0"}, "1710": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "MSTORE", "path": "0"}, "1711": {"op": "PUSH1", "value": "0x20"}, "1713": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "PUSH1", "path": "0", "value": "0x4"}, "1715": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "DUP3", "path": "0"}, "1716": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "ADD", "path": "0"}, "1717": {"op": "MSTORE"}, "1718": {"op": "PUSH1", "value": "0x25"}, "1720": {"op": "PUSH1", "value": "0x24"}, "1722": {"op": "DUP3"}, "1723": {"op": "ADD"}, "1724": {"op": "MSTORE"}, "1725": {"op": "PUSH32", "value": "0x43616E6E6F74207769746864726177206D6F7265207468616E20796F7572206C"}, "1758": {"op": "PUSH1", "value": "0x44"}, "1760": {"op": "DUP3"}, "1761": {"op": "ADD"}, "1762": {"op": "MSTORE"}, "1763": {"op": "PUSH5", "value": "0x34B6B4BA17"}, "1769": {"op": "PUSH1", "value": "0xD9"}, "1771": {"op": "SHL"}, "1772": {"op": "PUSH1", "value": "0x64"}, "1774": {"op": "DUP3"}, "1775": {"op": "ADD"}, "1776": {"op": "MSTORE"}, "1777": {"op": "PUSH1", "value": "0x84"}, "1779": {"op": "ADD"}, "1780": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1783": {"op": "JUMP"}, "1784": {"fn": "Bank.withdraw", "offset": [6303, 6375], "op": "JUMPDEST", "path": "0"}, "1785": {"fn": "Bank.withdraw", "offset": [6402, 6412], "op": "CALLER", "path": "0", "statement": 22}, "1786": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "PUSH1", "path": "0", "value": "0x0"}, "1788": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "SWAP1", "path": "0"}, "1789": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "DUP2", "path": "0"}, "1790": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "MSTORE", "path": "0"}, "1791": {"fn": "Bank.withdraw", "offset": [6393, 6401], "op": "PUSH1", "path": "0", "value": "0x4"}, "1793": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "PUSH1", "path": "0", "value": "0x20"}, "1795": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "MSTORE", "path": "0"}, "1796": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "PUSH1", "path": "0", "value": "0x40"}, "1798": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "SWAP1", "path": "0"}, "1799": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "KECCAK256", "path": "0"}, "1800": {"fn": "Bank.withdraw", "offset": [6393, 6413], "op": "SLOAD", "path": "0"}, "1801": {"fn": "Bank.withdraw", "offset": [6417, 6426], "op": "CALLVALUE", "path": "0"}, "1802": {"op": "GT"}, "1803": {"branch": 52, "fn": "Bank.withdraw", "offset": [6393, 6426], "op": "ISZERO", "path": "0"}, "1804": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "PUSH2", "path": "0", "value": "0x767"}, "1807": {"branch": 52, "fn": "Bank.withdraw", "offset": [6385, 6470], "op": "JUMPI", "path": "0"}, "1808": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "PUSH1", "path": "0", "value": "0x40"}, "1810": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "MLOAD", "path": "0"}, "1811": {"op": "PUSH3", "value": "0x461BCD"}, "1815": {"op": "PUSH1", "value": "0xE5"}, "1817": {"op": "SHL"}, "1818": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "DUP2", "path": "0"}, "1819": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "MSTORE", "path": "0"}, "1820": {"op": "PUSH1", "value": "0x20"}, "1822": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "PUSH1", "path": "0", "value": "0x4"}, "1824": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "DUP3", "path": "0"}, "1825": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "ADD", "path": "0"}, "1826": {"op": "MSTORE"}, "1827": {"op": "PUSH1", "value": "0x27"}, "1829": {"op": "PUSH1", "value": "0x24"}, "1831": {"op": "DUP3"}, "1832": {"op": "ADD"}, "1833": {"op": "MSTORE"}, "1834": {"op": "PUSH32", "value": "0x596F752063616E6E6F74207769746864726177206D6F7265207468616E20796F"}, "1867": {"op": "PUSH1", "value": "0x44"}, "1869": {"op": "DUP3"}, "1870": {"op": "ADD"}, "1871": {"op": "MSTORE"}, "1872": {"op": "PUSH7", "value": "0x3A903430BB3297"}, "1880": {"op": "PUSH1", "value": "0xC9"}, "1882": {"op": "SHL"}, "1883": {"op": "PUSH1", "value": "0x64"}, "1885": {"op": "DUP3"}, "1886": {"op": "ADD"}, "1887": {"op": "MSTORE"}, "1888": {"op": "PUSH1", "value": "0x84"}, "1890": {"op": "ADD"}, "1891": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "PUSH2", "path": "0", "value": "0x18C"}, "1894": {"op": "JUMP"}, "1895": {"fn": "Bank.withdraw", "offset": [6385, 6470], "op": "JUMPDEST", "path": "0"}, "1896": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH1", "path": "0", "statement": 23, "value": "0x40"}, "1898": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "MLOAD", "path": "0"}, "1899": {"fn": "Bank.withdraw", "offset": [6489, 6499], "op": "CALLER", "path": "0"}, "1900": {"fn": "Bank.withdraw", "offset": [6489, 6499], "op": "SWAP1", "path": "0"}, "1901": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP6", "path": "0"}, "1902": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "ISZERO", "path": "0"}, "1903": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH2", "path": "0", "value": "0x8FC"}, "1906": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "MUL", "path": "0"}, "1907": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "SWAP1", "path": "0"}, "1908": {"fn": "Bank.withdraw", "offset": [6510, 6516], "op": "DUP7", "path": "0"}, "1909": {"fn": "Bank.withdraw", "offset": [6510, 6516], "op": "SWAP1", "path": "0"}, "1910": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH1", "path": "0", "value": "0x0"}, "1912": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP2", "path": "0"}, "1913": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP2", "path": "0"}, "1914": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP2", "path": "0"}, "1915": {"fn": "Bank.withdraw", "offset": [6510, 6516], "op": "DUP6", "path": "0"}, "1916": {"fn": "Bank.withdraw", "offset": [6489, 6499], "op": "DUP9", "path": "0"}, "1917": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP9", "path": "0"}, "1918": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "CALL", "path": "0"}, "1919": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "SWAP4", "path": "0"}, "1920": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "POP", "path": "0"}, "1921": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "POP", "path": "0"}, "1922": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "POP", "path": "0"}, "1923": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "POP", "path": "0"}, "1924": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "ISZERO", "path": "0"}, "1925": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP1", "path": "0"}, "1926": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "ISZERO", "path": "0"}, "1927": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH2", "path": "0", "value": "0x794"}, "1930": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "JUMPI", "path": "0"}, "1931": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "RETURNDATASIZE", "path": "0"}, "1932": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH1", "path": "0", "value": "0x0"}, "1934": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "DUP1", "path": "0"}, "1935": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "RETURNDATACOPY", "path": "0"}, "1936": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "RETURNDATASIZE", "path": "0"}, "1937": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "PUSH1", "path": "0", "value": "0x0"}, "1939": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "REVERT", "path": "0"}, "1940": {"fn": "Bank.withdraw", "offset": [6481, 6517], "op": "JUMPDEST", "path": "0"}, "1941": {"op": "POP"}, "1942": {"fn": "Bank.withdraw", "offset": [6536, 6546], "op": "CALLER", "path": "0", "statement": 24}, "1943": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "PUSH1", "path": "0", "value": "0x0"}, "1945": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "SWAP1", "path": "0"}, "1946": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "DUP2", "path": "0"}, "1947": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "MSTORE", "path": "0"}, "1948": {"fn": "Bank.withdraw", "offset": [6527, 6535], "op": "PUSH1", "path": "0", "value": "0x4"}, "1950": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "PUSH1", "path": "0", "value": "0x20"}, "1952": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "MSTORE", "path": "0"}, "1953": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "PUSH1", "path": "0", "value": "0x40"}, "1955": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "DUP2", "path": "0"}, "1956": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "KECCAK256", "path": "0"}, "1957": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "DUP1", "path": "0"}, "1958": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "SLOAD", "path": "0"}, "1959": {"fn": "Bank.withdraw", "offset": [6551, 6557], "op": "DUP7", "path": "0"}, "1960": {"fn": "Bank.withdraw", "offset": [6551, 6557], "op": "SWAP3", "path": "0"}, "1961": {"fn": "Bank.withdraw", "offset": [6527, 6547], "op": "SWAP1", "path": "0"}, "1962": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "PUSH2", "path": "0", "value": "0x7B4"}, "1965": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "SWAP1", "path": "0"}, "1966": {"fn": "Bank.withdraw", "offset": [6551, 6557], "op": "DUP5", "path": "0"}, "1967": {"fn": "Bank.withdraw", "offset": [6551, 6557], "op": "SWAP1", "path": "0"}, "1968": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "PUSH2", "path": "0", "value": "0xBCA"}, "1971": {"fn": "Bank.withdraw", "jump": "i", "offset": [6527, 6557], "op": "JUMP", "path": "0"}, "1972": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "JUMPDEST", "path": "0"}, "1973": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "SWAP1", "path": "0"}, "1974": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "SWAP2", "path": "0"}, "1975": {"fn": "Bank.withdraw", "offset": [6527, 6557], "op": "SSTORE", "path": "0"}, "1976": {"op": "POP"}, "1977": {"op": "POP"}, "1978": {"op": "POP"}, "1979": {"op": "POP"}, "1980": {"op": "POP"}, "1981": {"op": "POP"}, "1982": {"fn": "Bank.withdraw", "jump": "o", "offset": [5939, 6564], "op": "JUMP", "path": "0"}, "1983": {"fn": "Bank.deposit", "offset": [5304, 5877], "op": "JUMPDEST", "path": "0"}, "1984": {"fn": "Bank.deposit", "offset": [5372, 5394], "op": "PUSH2", "path": "0", "statement": 25, "value": "0x7C8"}, "1987": {"fn": "Bank.deposit", "offset": [5383, 5393], "op": "CALLER", "path": "0"}, "1988": {"fn": "Bank.deposit", "offset": [5372, 5382], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "1991": {"fn": "Bank.deposit", "jump": "i", "offset": [5372, 5394], "op": "JUMP", "path": "0"}, "1992": {"branch": 53, "fn": "Bank.deposit", "offset": [5372, 5394], "op": "JUMPDEST", "path": "0"}, "1993": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "PUSH2", "path": "0", "value": "0x7E4"}, "1996": {"branch": 53, "fn": "Bank.deposit", "offset": [5364, 5419], "op": "JUMPI", "path": "0"}, "1997": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "PUSH1", "path": "0", "value": "0x40"}, "1999": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "MLOAD", "path": "0"}, "2000": {"op": "PUSH3", "value": "0x461BCD"}, "2004": {"op": "PUSH1", "value": "0xE5"}, "2006": {"op": "SHL"}, "2007": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "DUP2", "path": "0"}, "2008": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "MSTORE", "path": "0"}, "2009": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "PUSH1", "path": "0", "value": "0x4"}, "2011": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "ADD", "path": "0"}, "2012": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2015": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "SWAP1", "path": "0"}, "2016": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "2019": {"fn": "Bank.deposit", "jump": "i", "offset": [5364, 5419], "op": "JUMP", "path": "0"}, "2020": {"fn": "Bank.deposit", "offset": [5364, 5419], "op": "JUMPDEST", "path": "0"}, "2021": {"fn": "Bank.deposit", "offset": [5447, 5457], "op": "CALLER", "path": "0", "statement": 26}, "2022": {"fn": "Bank.deposit", "offset": [5437, 5446], "op": "PUSH1", "path": "0", "value": "0x0"}, "2024": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "SWAP1", "path": "0"}, "2025": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "DUP2", "path": "0"}, "2026": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "MSTORE", "path": "0"}, "2027": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "PUSH1", "path": "0", "value": "0x20"}, "2029": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "DUP2", "path": "0"}, "2030": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "SWAP1", "path": "0"}, "2031": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "MSTORE", "path": "0"}, "2032": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "PUSH1", "path": "0", "value": "0x40"}, "2034": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "SWAP1", "path": "0"}, "2035": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "KECCAK256", "path": "0"}, "2036": {"fn": "Bank.deposit", "offset": [5437, 5458], "op": "SLOAD", "path": "0"}, "2037": {"fn": "Bank.deposit", "offset": [5437, 5470], "op": "DUP2", "path": "0"}, "2038": {"branch": 54, "fn": "Bank.deposit", "offset": [5437, 5470], "op": "EQ", "path": "0"}, "2039": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "PUSH2", "path": "0", "value": "0x812"}, "2042": {"branch": 54, "fn": "Bank.deposit", "offset": [5429, 5490], "op": "JUMPI", "path": "0"}, "2043": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "PUSH1", "path": "0", "value": "0x40"}, "2045": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "MLOAD", "path": "0"}, "2046": {"op": "PUSH3", "value": "0x461BCD"}, "2050": {"op": "PUSH1", "value": "0xE5"}, "2052": {"op": "SHL"}, "2053": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "DUP2", "path": "0"}, "2054": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "MSTORE", "path": "0"}, "2055": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "PUSH1", "path": "0", "value": "0x4"}, "2057": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "ADD", "path": "0"}, "2058": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2061": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "SWAP1", "path": "0"}, "2062": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "PUSH2", "path": "0", "value": "0xB8B"}, "2065": {"fn": "Bank.deposit", "jump": "i", "offset": [5429, 5490], "op": "JUMP", "path": "0"}, "2066": {"fn": "Bank.deposit", "offset": [5429, 5490], "op": "JUMPDEST", "path": "0"}, "2067": {"fn": "Bank.deposit", "offset": [5508, 5517], "op": "CALLVALUE", "path": "0", "statement": 27}, "2068": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "PUSH2", "path": "0", "value": "0x852"}, "2071": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "JUMPI", "path": "0"}, "2072": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "PUSH1", "path": "0", "value": "0x40"}, "2074": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "MLOAD", "path": "0"}, "2075": {"op": "PUSH3", "value": "0x461BCD"}, "2079": {"op": "PUSH1", "value": "0xE5"}, "2081": {"op": "SHL"}, "2082": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "DUP2", "path": "0"}, "2083": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "MSTORE", "path": "0"}, "2084": {"op": "PUSH1", "value": "0x20"}, "2086": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "PUSH1", "path": "0", "value": "0x4"}, "2088": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "DUP3", "path": "0"}, "2089": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "ADD", "path": "0"}, "2090": {"op": "MSTORE"}, "2091": {"op": "PUSH1", "value": "0x10"}, "2093": {"op": "PUSH1", "value": "0x24"}, "2095": {"op": "DUP3"}, "2096": {"op": "ADD"}, "2097": {"op": "MSTORE"}, "2098": {"op": "PUSH16", "value": "0x43616E6E6F74206465706F736974203"}, "2115": {"op": "PUSH1", "value": "0x84"}, "2117": {"op": "SHL"}, "2118": {"op": "PUSH1", "value": "0x44"}, "2120": {"op": "DUP3"}, "2121": {"op": "ADD"}, "2122": {"op": "MSTORE"}, "2123": {"op": "PUSH1", "value": "0x64"}, "2125": {"op": "ADD"}, "2126": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2129": {"op": "JUMP"}, "2130": {"fn": "Bank.deposit", "offset": [5500, 5543], "op": "JUMPDEST", "path": "0"}, "2131": {"fn": "Bank.deposit", "offset": [5580, 5590], "op": "CALLER", "path": "0"}, "2132": {"fn": "Bank.deposit", "offset": [5554, 5568], "op": "PUSH1", "path": "0", "value": "0x0"}, "2134": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "SWAP1", "path": "0"}, "2135": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "DUP2", "path": "0"}, "2136": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "MSTORE", "path": "0"}, "2137": {"fn": "Bank.deposit", "offset": [5571, 5579], "op": "PUSH1", "path": "0", "value": "0x2"}, "2139": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "PUSH1", "path": "0", "value": "0x20"}, "2141": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "MSTORE", "path": "0"}, "2142": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "PUSH1", "path": "0", "value": "0x40"}, "2144": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "DUP2", "path": "0"}, "2145": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "KECCAK256", "path": "0"}, "2146": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "SLOAD", "path": "0"}, "2147": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "PUSH1", "path": "0", "value": "0xFF"}, "2149": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "AND", "path": "0"}, "2150": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "SWAP1", "path": "0"}, "2151": {"fn": "Bank.deposit", "offset": [5618, 5628], "op": "PUSH1", "path": "0", "value": "0x3"}, "2153": {"fn": "Bank.deposit", "offset": [5554, 5568], "op": "DUP2", "path": "0"}, "2154": {"fn": "Bank.deposit", "offset": [5571, 5591], "op": "DUP4", "path": "0"}, "2155": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "DUP3", "path": "0"}, "2156": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "DUP2", "path": "0"}, "2157": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "GT", "path": "0"}, "2158": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "ISZERO", "path": "0"}, "2159": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0x87A"}, "2162": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "JUMPI", "path": "0"}, "2163": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0x87A"}, "2166": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "2169": {"fn": "Bank.deposit", "jump": "i", "offset": [5618, 5639], "op": "JUMP", "path": "0"}, "2170": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "JUMPDEST", "path": "0"}, "2171": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH1", "path": "0", "value": "0x3"}, "2173": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "DUP2", "path": "0"}, "2174": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "GT", "path": "0"}, "2175": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "ISZERO", "path": "0"}, "2176": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0x88B"}, "2179": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "JUMPI", "path": "0"}, "2180": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0x88B"}, "2183": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH2", "path": "0", "value": "0xB1F"}, "2186": {"fn": "Bank.deposit", "jump": "i", "offset": [5618, 5639], "op": "JUMP", "path": "0"}, "2187": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "JUMPDEST", "path": "0"}, "2188": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "DUP2", "path": "0"}, "2189": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "MSTORE", "path": "0"}, "2190": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH1", "path": "0", "value": "0x20"}, "2192": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "ADD", "path": "0"}, "2193": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "SWAP1", "path": "0"}, "2194": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "DUP2", "path": "0"}, "2195": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "MSTORE", "path": "0"}, "2196": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH1", "path": "0", "value": "0x20"}, "2198": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "ADD", "path": "0"}, "2199": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "PUSH1", "path": "0", "value": "0x0"}, "2201": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "KECCAK256", "path": "0"}, "2202": {"fn": "Bank.deposit", "offset": [5618, 5639], "op": "SLOAD", "path": "0"}, "2203": {"fn": "Bank.deposit", "offset": [5601, 5639], "op": "SWAP1", "path": "0"}, "2204": {"fn": "Bank.deposit", "offset": [5601, 5639], "op": "POP", "path": "0"}, "2205": {"fn": "Bank.deposit", "offset": [5671, 5680], "op": "DUP1", "path": "0", "statement": 28}, "2206": {"fn": "Bank.deposit", "offset": [5658, 5667], "op": "CALLVALUE", "path": "0"}, "2207": {"fn": "Bank.deposit", "offset": [5658, 5680], "op": "GT", "path": "0"}, "2208": {"branch": 55, "fn": "Bank.deposit", "offset": [5658, 5680], "op": "ISZERO", "path": "0"}, "2209": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "PUSH2", "path": "0", "value": "0x8F8"}, "2212": {"branch": 55, "fn": "Bank.deposit", "offset": [5650, 5721], "op": "JUMPI", "path": "0"}, "2213": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "PUSH1", "path": "0", "value": "0x40"}, "2215": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "MLOAD", "path": "0"}, "2216": {"op": "PUSH3", "value": "0x461BCD"}, "2220": {"op": "PUSH1", "value": "0xE5"}, "2222": {"op": "SHL"}, "2223": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "DUP2", "path": "0"}, "2224": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "MSTORE", "path": "0"}, "2225": {"op": "PUSH1", "value": "0x20"}, "2227": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "PUSH1", "path": "0", "value": "0x4"}, "2229": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "DUP3", "path": "0"}, "2230": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "ADD", "path": "0"}, "2231": {"op": "MSTORE"}, "2232": {"op": "PUSH1", "value": "0x24"}, "2234": {"op": "DUP1"}, "2235": {"op": "DUP3"}, "2236": {"op": "ADD"}, "2237": {"op": "MSTORE"}, "2238": {"op": "PUSH32", "value": "0x43616E6E6F74206465706F736974206D6F7265207468616E20796F7572206C69"}, "2271": {"op": "PUSH1", "value": "0x44"}, "2273": {"op": "DUP3"}, "2274": {"op": "ADD"}, "2275": {"op": "MSTORE"}, "2276": {"op": "PUSH4", "value": "0x36B4BA17"}, "2281": {"op": "PUSH1", "value": "0xE1"}, "2283": {"op": "SHL"}, "2284": {"op": "PUSH1", "value": "0x64"}, "2286": {"op": "DUP3"}, "2287": {"op": "ADD"}, "2288": {"op": "MSTORE"}, "2289": {"op": "PUSH1", "value": "0x84"}, "2291": {"op": "ADD"}, "2292": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2295": {"op": "JUMP"}, "2296": {"fn": "Bank.deposit", "offset": [5650, 5721], "op": "JUMPDEST", "path": "0"}, "2297": {"fn": "Bank.deposit", "offset": [5748, 5758], "op": "CALLER", "path": "0", "statement": 29}, "2298": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "PUSH1", "path": "0", "value": "0x0"}, "2300": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "SWAP1", "path": "0"}, "2301": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "DUP2", "path": "0"}, "2302": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "MSTORE", "path": "0"}, "2303": {"fn": "Bank.deposit", "offset": [5739, 5747], "op": "PUSH1", "path": "0", "value": "0x4"}, "2305": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "PUSH1", "path": "0", "value": "0x20"}, "2307": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "MSTORE", "path": "0"}, "2308": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "PUSH1", "path": "0", "value": "0x40"}, "2310": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "SWAP1", "path": "0"}, "2311": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "KECCAK256", "path": "0"}, "2312": {"fn": "Bank.deposit", "offset": [5739, 5759], "op": "SLOAD", "path": "0"}, "2313": {"fn": "Bank.deposit", "offset": [5775, 5784], "op": "DUP2", "path": "0"}, "2314": {"fn": "Bank.deposit", "offset": [5775, 5784], "op": "SWAP1", "path": "0"}, "2315": {"fn": "Bank.deposit", "offset": [5739, 5771], "op": "PUSH2", "path": "0", "value": "0x915"}, "2318": {"fn": "Bank.deposit", "offset": [5739, 5771], "op": "SWAP1", "path": "0"}, "2319": {"fn": "Bank.deposit", "offset": [5762, 5771], "op": "CALLVALUE", "path": "0"}, "2320": {"fn": "Bank.deposit", "offset": [5762, 5771], "op": "SWAP1", "path": "0"}, "2321": {"fn": "Bank.deposit", "offset": [5739, 5771], "op": "PUSH2", "path": "0", "value": "0xBE1"}, "2324": {"fn": "Bank.deposit", "jump": "i", "offset": [5739, 5771], "op": "JUMP", "path": "0"}, "2325": {"fn": "Bank.deposit", "offset": [5739, 5771], "op": "JUMPDEST", "path": "0"}, "2326": {"fn": "Bank.deposit", "offset": [5739, 5784], "op": "GT", "path": "0"}, "2327": {"branch": 56, "fn": "Bank.deposit", "offset": [5739, 5784], "op": "ISZERO", "path": "0"}, "2328": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "PUSH2", "path": "0", "value": "0x971"}, "2331": {"branch": 56, "fn": "Bank.deposit", "offset": [5731, 5826], "op": "JUMPI", "path": "0"}, "2332": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "PUSH1", "path": "0", "value": "0x40"}, "2334": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "MLOAD", "path": "0"}, "2335": {"op": "PUSH3", "value": "0x461BCD"}, "2339": {"op": "PUSH1", "value": "0xE5"}, "2341": {"op": "SHL"}, "2342": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "DUP2", "path": "0"}, "2343": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "MSTORE", "path": "0"}, "2344": {"op": "PUSH1", "value": "0x20"}, "2346": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "PUSH1", "path": "0", "value": "0x4"}, "2348": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "DUP3", "path": "0"}, "2349": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "ADD", "path": "0"}, "2350": {"op": "MSTORE"}, "2351": {"op": "PUSH1", "value": "0x25"}, "2353": {"op": "PUSH1", "value": "0x24"}, "2355": {"op": "DUP3"}, "2356": {"op": "ADD"}, "2357": {"op": "MSTORE"}, "2358": {"op": "PUSH32", "value": "0x596F752063616E6E6F742068617665206D6F7265207468616E20796F7572206C"}, "2391": {"op": "PUSH1", "value": "0x44"}, "2393": {"op": "DUP3"}, "2394": {"op": "ADD"}, "2395": {"op": "MSTORE"}, "2396": {"op": "PUSH5", "value": "0x34B6B4BA17"}, "2402": {"op": "PUSH1", "value": "0xD9"}, "2404": {"op": "SHL"}, "2405": {"op": "PUSH1", "value": "0x64"}, "2407": {"op": "DUP3"}, "2408": {"op": "ADD"}, "2409": {"op": "MSTORE"}, "2410": {"op": "PUSH1", "value": "0x84"}, "2412": {"op": "ADD"}, "2413": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2416": {"op": "JUMP"}, "2417": {"fn": "Bank.deposit", "offset": [5731, 5826], "op": "JUMPDEST", "path": "0"}, "2418": {"fn": "Bank.deposit", "offset": [5846, 5856], "op": "CALLER", "path": "0", "statement": 30}, "2419": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "PUSH1", "path": "0", "value": "0x0"}, "2421": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "SWAP1", "path": "0"}, "2422": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "DUP2", "path": "0"}, "2423": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "MSTORE", "path": "0"}, "2424": {"fn": "Bank.deposit", "offset": [5837, 5845], "op": "PUSH1", "path": "0", "value": "0x4"}, "2426": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "PUSH1", "path": "0", "value": "0x20"}, "2428": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "MSTORE", "path": "0"}, "2429": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "PUSH1", "path": "0", "value": "0x40"}, "2431": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "DUP2", "path": "0"}, "2432": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "KECCAK256", "path": "0"}, "2433": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "DUP1", "path": "0"}, "2434": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "SLOAD", "path": "0"}, "2435": {"fn": "Bank.deposit", "offset": [5861, 5870], "op": "CALLVALUE", "path": "0"}, "2436": {"fn": "Bank.deposit", "offset": [5861, 5870], "op": "SWAP3", "path": "0"}, "2437": {"fn": "Bank.deposit", "offset": [5837, 5857], "op": "SWAP1", "path": "0"}, "2438": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "PUSH2", "path": "0", "value": "0x990"}, "2441": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "SWAP1", "path": "0"}, "2442": {"fn": "Bank.deposit", "offset": [5861, 5870], "op": "DUP5", "path": "0"}, "2443": {"fn": "Bank.deposit", "offset": [5861, 5870], "op": "SWAP1", "path": "0"}, "2444": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "PUSH2", "path": "0", "value": "0xBE1"}, "2447": {"fn": "Bank.deposit", "jump": "i", "offset": [5837, 5870], "op": "JUMP", "path": "0"}, "2448": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "JUMPDEST", "path": "0"}, "2449": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "SWAP1", "path": "0"}, "2450": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "SWAP2", "path": "0"}, "2451": {"fn": "Bank.deposit", "offset": [5837, 5870], "op": "SSTORE", "path": "0"}, "2452": {"op": "POP"}, "2453": {"op": "POP"}, "2454": {"op": "POP"}, "2455": {"op": "POP"}, "2456": {"op": "POP"}, "2457": {"fn": "Bank.deposit", "jump": "o", "offset": [5304, 5877], "op": "JUMP", "path": "0"}, "2458": {"fn": "Bank.show", "offset": [7365, 7516], "op": "JUMPDEST", "path": "0"}, "2459": {"fn": "Bank.show", "offset": [7401, 7405], "op": "PUSH1", "path": "0", "value": "0x0"}, "2461": {"fn": "Bank.show", "offset": [7425, 7447], "op": "PUSH2", "path": "0", "statement": 31, "value": "0x9A5"}, "2464": {"fn": "Bank.show", "offset": [7436, 7446], "op": "CALLER", "path": "0"}, "2465": {"fn": "Bank.show", "offset": [7425, 7435], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "2468": {"fn": "Bank.show", "jump": "i", "offset": [7425, 7447], "op": "JUMP", "path": "0"}, "2469": {"branch": 57, "fn": "Bank.show", "offset": [7425, 7447], "op": "JUMPDEST", "path": "0"}, "2470": {"fn": "Bank.show", "offset": [7417, 7472], "op": "PUSH2", "path": "0", "value": "0x9C1"}, "2473": {"branch": 57, "fn": "Bank.show", "offset": [7417, 7472], "op": "JUMPI", "path": "0"}, "2474": {"fn": "Bank.show", "offset": [7417, 7472], "op": "PUSH1", "path": "0", "value": "0x40"}, "2476": {"fn": "Bank.show", "offset": [7417, 7472], "op": "MLOAD", "path": "0"}, "2477": {"op": "PUSH3", "value": "0x461BCD"}, "2481": {"op": "PUSH1", "value": "0xE5"}, "2483": {"op": "SHL"}, "2484": {"fn": "Bank.show", "offset": [7417, 7472], "op": "DUP2", "path": "0"}, "2485": {"fn": "Bank.show", "offset": [7417, 7472], "op": "MSTORE", "path": "0"}, "2486": {"fn": "Bank.show", "offset": [7417, 7472], "op": "PUSH1", "path": "0", "value": "0x4"}, "2488": {"fn": "Bank.show", "offset": [7417, 7472], "op": "ADD", "path": "0"}, "2489": {"fn": "Bank.show", "offset": [7417, 7472], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2492": {"fn": "Bank.show", "offset": [7417, 7472], "op": "SWAP1", "path": "0"}, "2493": {"fn": "Bank.show", "offset": [7417, 7472], "op": "PUSH2", "path": "0", "value": "0xB5D"}, "2496": {"fn": "Bank.show", "jump": "i", "offset": [7417, 7472], "op": "JUMP", "path": "0"}, "2497": {"fn": "Bank.show", "offset": [7417, 7472], "op": "JUMPDEST", "path": "0"}, "2498": {"op": "POP"}, "2499": {"fn": "Bank.show", "offset": [7498, 7508], "op": "CALLER", "path": "0", "statement": 32}, "2500": {"fn": "Bank.show", "offset": [7489, 7509], "op": "PUSH1", "path": "0", "value": "0x0"}, "2502": {"fn": "Bank.show", "offset": [7489, 7509], "op": "SWAP1", "path": "0"}, "2503": {"fn": "Bank.show", "offset": [7489, 7509], "op": "DUP2", "path": "0"}, "2504": {"fn": "Bank.show", "offset": [7489, 7509], "op": "MSTORE", "path": "0"}, "2505": {"fn": "Bank.show", "offset": [7489, 7497], "op": "PUSH1", "path": "0", "value": "0x2"}, "2507": {"fn": "Bank.show", "offset": [7489, 7509], "op": "PUSH1", "path": "0", "value": "0x20"}, "2509": {"fn": "Bank.show", "offset": [7489, 7509], "op": "MSTORE", "path": "0"}, "2510": {"fn": "Bank.show", "offset": [7489, 7509], "op": "PUSH1", "path": "0", "value": "0x40"}, "2512": {"fn": "Bank.show", "offset": [7489, 7509], "op": "SWAP1", "path": "0"}, "2513": {"fn": "Bank.show", "offset": [7489, 7509], "op": "KECCAK256", "path": "0"}, "2514": {"fn": "Bank.show", "offset": [7489, 7509], "op": "SLOAD", "path": "0"}, "2515": {"fn": "Bank.show", "offset": [7489, 7509], "op": "PUSH1", "path": "0", "value": "0xFF"}, "2517": {"fn": "Bank.show", "offset": [7489, 7509], "op": "AND", "path": "0"}, "2518": {"fn": "Bank.show", "offset": [7489, 7509], "op": "SWAP1", "path": "0"}, "2519": {"fn": "Bank.show", "jump": "o", "offset": [7365, 7516], "op": "JUMP", "path": "0"}, "2520": {"fn": "Bank.createAccount", "offset": [2533, 3078], "op": "JUMPDEST", "path": "0"}, "2521": {"fn": "Bank.createAccount", "offset": [2658, 2668], "op": "CALLER", "path": "0", "statement": 33}, "2522": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "PUSH2", "path": "0", "value": "0xA1C"}, "2525": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "JUMPI", "path": "0"}, "2526": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "PUSH1", "path": "0", "value": "0x40"}, "2528": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "MLOAD", "path": "0"}, "2529": {"op": "PUSH3", "value": "0x461BCD"}, "2533": {"op": "PUSH1", "value": "0xE5"}, "2535": {"op": "SHL"}, "2536": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "DUP2", "path": "0"}, "2537": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "MSTORE", "path": "0"}, "2538": {"op": "PUSH1", "value": "0x20"}, "2540": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "PUSH1", "path": "0", "value": "0x4"}, "2542": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "DUP3", "path": "0"}, "2543": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "ADD", "path": "0"}, "2544": {"op": "MSTORE"}, "2545": {"op": "PUSH1", "value": "0x14"}, "2547": {"op": "PUSH1", "value": "0x24"}, "2549": {"op": "DUP3"}, "2550": {"op": "ADD"}, "2551": {"op": "MSTORE"}, "2552": {"op": "PUSH20", "value": "0x21B0B63610333937B690181030B2323932B9B997"}, "2573": {"op": "PUSH1", "value": "0x61"}, "2575": {"op": "SHL"}, "2576": {"op": "PUSH1", "value": "0x44"}, "2578": {"op": "DUP3"}, "2579": {"op": "ADD"}, "2580": {"op": "MSTORE"}, "2581": {"op": "PUSH1", "value": "0x64"}, "2583": {"op": "ADD"}, "2584": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2587": {"op": "JUMP"}, "2588": {"fn": "Bank.createAccount", "offset": [2650, 2707], "op": "JUMPDEST", "path": "0"}, "2589": {"fn": "Bank.createAccount", "offset": [2777, 2799], "op": "PUSH2", "path": "0", "statement": 34, "value": "0xA25"}, "2592": {"fn": "Bank.createAccount", "offset": [2788, 2798], "op": "CALLER", "path": "0"}, "2593": {"fn": "Bank.createAccount", "offset": [2777, 2787], "op": "PUSH2", "path": "0", "value": "0xA8F"}, "2596": {"fn": "Bank.createAccount", "jump": "i", "offset": [2777, 2799], "op": "JUMP", "path": "0"}, "2597": {"fn": "Bank.createAccount", "offset": [2777, 2799], "op": "JUMPDEST", "path": "0"}, "2598": {"branch": 58, "fn": "Bank.createAccount", "offset": [2776, 2799], "op": "ISZERO", "path": "0"}, "2599": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "PUSH2", "path": "0", "value": "0xA6C"}, "2602": {"branch": 58, "fn": "Bank.createAccount", "offset": [2768, 2827], "op": "JUMPI", "path": "0"}, "2603": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "PUSH1", "path": "0", "value": "0x40"}, "2605": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "MLOAD", "path": "0"}, "2606": {"op": "PUSH3", "value": "0x461BCD"}, "2610": {"op": "PUSH1", "value": "0xE5"}, "2612": {"op": "SHL"}, "2613": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "DUP2", "path": "0"}, "2614": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "MSTORE", "path": "0"}, "2615": {"op": "PUSH1", "value": "0x20"}, "2617": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "PUSH1", "path": "0", "value": "0x4"}, "2619": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "DUP3", "path": "0"}, "2620": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "ADD", "path": "0"}, "2621": {"op": "MSTORE"}, "2622": {"op": "PUSH1", "value": "0x17"}, "2624": {"op": "PUSH1", "value": "0x24"}, "2626": {"op": "DUP3"}, "2627": {"op": "ADD"}, "2628": {"op": "MSTORE"}, "2629": {"op": "PUSH23", "value": "0x20B2323932B9B9903430B99030B71030B1B1B7BAB73A17"}, "2653": {"op": "PUSH1", "value": "0x49"}, "2655": {"op": "SHL"}, "2656": {"op": "PUSH1", "value": "0x44"}, "2658": {"op": "DUP3"}, "2659": {"op": "ADD"}, "2660": {"op": "MSTORE"}, "2661": {"op": "PUSH1", "value": "0x64"}, "2663": {"op": "ADD"}, "2664": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "PUSH2", "path": "0", "value": "0x18C"}, "2667": {"op": "JUMP"}, "2668": {"fn": "Bank.createAccount", "offset": [2768, 2827], "op": "JUMPDEST", "path": "0"}, "2669": {"fn": "Bank.createAccount", "offset": [3007, 3017], "op": "CALLER", "path": "0", "statement": 35}, "2670": {"fn": "Bank.createAccount", "offset": [2997, 3006], "op": "PUSH1", "path": "0", "value": "0x0"}, "2672": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "SWAP1", "path": "0"}, "2673": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "DUP2", "path": "0"}, "2674": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "MSTORE", "path": "0"}, "2675": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "PUSH1", "path": "0", "value": "0x20"}, "2677": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "DUP2", "path": "0"}, "2678": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "DUP2", "path": "0"}, "2679": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "MSTORE", "path": "0"}, "2680": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "PUSH1", "path": "0", "value": "0x40"}, "2682": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "DUP1", "path": "0"}, "2683": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "DUP4", "path": "0"}, "2684": {"fn": "Bank.createAccount", "offset": [2997, 3018], "op": "KECCAK256", "path": "0"}, "2685": {"fn": "Bank.createAccount", "offset": [2997, 3029], "op": "SWAP4", "path": "0"}, "2686": {"fn": "Bank.createAccount", "offset": [2997, 3029], "op": "SWAP1", "path": "0"}, "2687": {"fn": "Bank.createAccount", "offset": [2997, 3029], "op": "SWAP4", "path": "0"}, "2688": {"fn": "Bank.createAccount", "offset": [2997, 3029], "op": "SSTORE", "path": "0"}, "2689": {"fn": "Bank.createAccount", "offset": [3039, 3047], "op": "PUSH1", "path": "0", "statement": 36, "value": "0x2"}, "2691": {"fn": "Bank.createAccount", "offset": [3039, 3059], "op": "SWAP1", "path": "0"}, "2692": {"fn": "Bank.createAccount", "offset": [3039, 3059], "op": "MSTORE", "path": "0"}, "2693": {"fn": "Bank.createAccount", "offset": [3039, 3059], "op": "KECCAK256", "path": "0"}, "2694": {"fn": "Bank.createAccount", "offset": [3039, 3071], "op": "DUP1", "path": "0"}, "2695": {"fn": "Bank.createAccount", "offset": [3039, 3071], "op": "SLOAD", "path": "0"}, "2696": {"op": "PUSH1", "value": "0xFF"}, "2698": {"op": "NOT"}, "2699": {"fn": "Bank.createAccount", "offset": [3039, 3071], "op": "AND", "path": "0"}, "2700": {"fn": "Bank.createAccount", "offset": [3039, 3071], "op": "SWAP1", "path": "0"}, "2701": {"fn": "Bank.createAccount", "offset": [3039, 3071], "op": "SSTORE", "path": "0"}, "2702": {"fn": "Bank.createAccount", "jump": "o", "offset": [2533, 3078], "op": "JUMP", "path": "0"}, "2703": {"fn": "Bank.hasAccount", "offset": [4271, 4466], "op": "JUMPDEST", "path": "0"}, "2704": {"op": "PUSH1", "value": "0x1"}, "2706": {"op": "PUSH1", "value": "0x1"}, "2708": {"op": "PUSH1", "value": "0xA0"}, "2710": {"op": "SHL"}, "2711": {"op": "SUB"}, "2712": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "AND", "path": "0", "statement": 37}, "2713": {"fn": "Bank.hasAccount", "offset": [4330, 4334], "op": "PUSH1", "path": "0", "value": "0x0"}, "2715": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "SWAP1", "path": "0"}, "2716": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "DUP2", "path": "0"}, "2717": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "MSTORE", "path": "0"}, "2718": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "PUSH1", "path": "0", "value": "0x20"}, "2720": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "DUP2", "path": "0"}, "2721": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "SWAP1", "path": "0"}, "2722": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "MSTORE", "path": "0"}, "2723": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "PUSH1", "path": "0", "value": "0x40"}, "2725": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "SWAP1", "path": "0"}, "2726": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "KECCAK256", "path": "0"}, "2727": {"fn": "Bank.hasAccount", "offset": [4426, 4445], "op": "SLOAD", "path": "0"}, "2728": {"fn": "Bank.hasAccount", "offset": [4426, 4459], "op": "ISZERO", "path": "0"}, "2729": {"fn": "Bank.hasAccount", "offset": [4426, 4459], "op": "ISZERO", "path": "0"}, "2730": {"fn": "Bank.hasAccount", "offset": [4426, 4459], "op": "SWAP1", "path": "0"}, "2731": {"fn": "Bank.hasAccount", "jump": "o", "offset": [4271, 4466], "op": "JUMP", "path": "0"}, "2732": {"op": "JUMPDEST"}, "2733": {"op": "PUSH1", "value": "0x0"}, "2735": {"op": "DUP1"}, "2736": {"op": "PUSH1", "value": "0x40"}, "2738": {"op": "DUP4"}, "2739": {"op": "DUP6"}, "2740": {"op": "SUB"}, "2741": {"op": "SLT"}, "2742": {"op": "ISZERO"}, "2743": {"op": "PUSH2", "value": "0xABF"}, "2746": {"op": "JUMPI"}, "2747": {"op": "PUSH1", "value": "0x0"}, "2749": {"op": "DUP1"}, "2750": {"op": "REVERT"}, "2751": {"op": "JUMPDEST"}, "2752": {"op": "POP"}, "2753": {"op": "POP"}, "2754": {"op": "DUP1"}, "2755": {"op": "CALLDATALOAD"}, "2756": {"op": "SWAP3"}, "2757": {"op": "PUSH1", "value": "0x20"}, "2759": {"op": "SWAP1"}, "2760": {"op": "SWAP2"}, "2761": {"op": "ADD"}, "2762": {"op": "CALLDATALOAD"}, "2763": {"op": "SWAP2"}, "2764": {"op": "POP"}, "2765": {"jump": "o", "op": "JUMP"}, "2766": {"op": "JUMPDEST"}, "2767": {"op": "PUSH1", "value": "0x0"}, "2769": {"op": "DUP1"}, "2770": {"op": "PUSH1", "value": "0x40"}, "2772": {"op": "DUP4"}, "2773": {"op": "DUP6"}, "2774": {"op": "SUB"}, "2775": {"op": "SLT"}, "2776": {"op": "ISZERO"}, "2777": {"op": "PUSH2", "value": "0xAE1"}, "2780": {"op": "JUMPI"}, "2781": {"op": "PUSH1", "value": "0x0"}, "2783": {"op": "DUP1"}, "2784": {"op": "REVERT"}, "2785": {"op": "JUMPDEST"}, "2786": {"op": "DUP3"}, "2787": {"op": "CALLDATALOAD"}, "2788": {"op": "PUSH1", "value": "0x1"}, "2790": {"op": "PUSH1", "value": "0x1"}, "2792": {"op": "PUSH1", "value": "0xA0"}, "2794": {"op": "SHL"}, "2795": {"op": "SUB"}, "2796": {"op": "DUP2"}, "2797": {"op": "AND"}, "2798": {"op": "DUP2"}, "2799": {"op": "EQ"}, "2800": {"op": "PUSH2", "value": "0xAF8"}, "2803": {"op": "JUMPI"}, "2804": {"op": "PUSH1", "value": "0x0"}, "2806": {"op": "DUP1"}, "2807": {"op": "REVERT"}, "2808": {"op": "JUMPDEST"}, "2809": {"op": "SWAP5"}, "2810": {"op": "PUSH1", "value": "0x20"}, "2812": {"op": "SWAP4"}, "2813": {"op": "SWAP1"}, "2814": {"op": "SWAP4"}, "2815": {"op": "ADD"}, "2816": {"op": "CALLDATALOAD"}, "2817": {"op": "SWAP4"}, "2818": {"op": "POP"}, "2819": {"op": "POP"}, "2820": {"op": "POP"}, "2821": {"jump": "o", "op": "JUMP"}, "2822": {"op": "JUMPDEST"}, "2823": {"op": "PUSH1", "value": "0x0"}, "2825": {"op": "PUSH1", "value": "0x20"}, "2827": {"op": "DUP3"}, "2828": {"op": "DUP5"}, "2829": {"op": "SUB"}, "2830": {"op": "SLT"}, "2831": {"op": "ISZERO"}, "2832": {"op": "PUSH2", "value": "0xB18"}, "2835": {"op": "JUMPI"}, "2836": {"op": "PUSH1", "value": "0x0"}, "2838": {"op": "DUP1"}, "2839": {"op": "REVERT"}, "2840": {"op": "JUMPDEST"}, "2841": {"op": "POP"}, "2842": {"op": "CALLDATALOAD"}, "2843": {"op": "SWAP2"}, "2844": {"op": "SWAP1"}, "2845": {"op": "POP"}, "2846": {"jump": "o", "op": "JUMP"}, "2847": {"op": "JUMPDEST"}, "2848": {"op": "PUSH4", "value": "0x4E487B71"}, "2853": {"op": "PUSH1", "value": "0xE0"}, "2855": {"op": "SHL"}, "2856": {"op": "PUSH1", "value": "0x0"}, "2858": {"op": "MSTORE"}, "2859": {"op": "PUSH1", "value": "0x21"}, "2861": {"op": "PUSH1", "value": "0x4"}, "2863": {"op": "MSTORE"}, "2864": {"op": "PUSH1", "value": "0x24"}, "2866": {"op": "PUSH1", "value": "0x0"}, "2868": {"op": "REVERT"}, "2869": {"op": "JUMPDEST"}, "2870": {"op": "PUSH1", "value": "0x20"}, "2872": {"op": "DUP2"}, "2873": {"op": "ADD"}, "2874": {"op": "PUSH1", "value": "0x4"}, "2876": {"op": "DUP4"}, "2877": {"op": "LT"}, "2878": {"op": "PUSH2", "value": "0xB57"}, "2881": {"op": "JUMPI"}, "2882": {"op": "PUSH4", "value": "0x4E487B71"}, "2887": {"op": "PUSH1", "value": "0xE0"}, "2889": {"op": "SHL"}, "2890": {"op": "PUSH1", "value": "0x0"}, "2892": {"op": "MSTORE"}, "2893": {"op": "PUSH1", "value": "0x21"}, "2895": {"op": "PUSH1", "value": "0x4"}, "2897": {"op": "MSTORE"}, "2898": {"op": "PUSH1", "value": "0x24"}, "2900": {"op": "PUSH1", "value": "0x0"}, "2902": {"op": "REVERT"}, "2903": {"op": "JUMPDEST"}, "2904": {"op": "SWAP2"}, "2905": {"op": "SWAP1"}, "2906": {"op": "MSTORE"}, "2907": {"op": "SWAP1"}, "2908": {"jump": "o", "op": "JUMP"}, "2909": {"op": "JUMPDEST"}, "2910": {"op": "PUSH1", "value": "0x20"}, "2912": {"op": "DUP1"}, "2913": {"op": "DUP3"}, "2914": {"op": "MSTORE"}, "2915": {"op": "PUSH1", "value": "0x14"}, "2917": {"op": "SWAP1"}, "2918": {"op": "DUP3"}, "2919": {"op": "ADD"}, "2920": {"op": "MSTORE"}, "2921": {"op": "PUSH20", "value": "0x2737B716A0B1B1B7BAB73A1030B2323932B9B997"}, "2942": {"op": "PUSH1", "value": "0x61"}, "2944": {"op": "SHL"}, "2945": {"op": "PUSH1", "value": "0x40"}, "2947": {"op": "DUP3"}, "2948": {"op": "ADD"}, "2949": {"op": "MSTORE"}, "2950": {"op": "PUSH1", "value": "0x60"}, "2952": {"op": "ADD"}, "2953": {"op": "SWAP1"}, "2954": {"jump": "o", "op": "JUMP"}, "2955": {"op": "JUMPDEST"}, "2956": {"op": "PUSH1", "value": "0x20"}, "2958": {"op": "DUP1"}, "2959": {"op": "DUP3"}, "2960": {"op": "MSTORE"}, "2961": {"op": "PUSH1", "value": "0xF"}, "2963": {"op": "SWAP1"}, "2964": {"op": "DUP3"}, "2965": {"op": "ADD"}, "2966": {"op": "MSTORE"}, "2967": {"op": "PUSH15", "value": "0x2BB937B733903830B9B9BBB7B93217"}, "2983": {"op": "PUSH1", "value": "0x89"}, "2985": {"op": "SHL"}, "2986": {"op": "PUSH1", "value": "0x40"}, "2988": {"op": "DUP3"}, "2989": {"op": "ADD"}, "2990": {"op": "MSTORE"}, "2991": {"op": "PUSH1", "value": "0x60"}, "2993": {"op": "ADD"}, "2994": {"op": "SWAP1"}, "2995": {"jump": "o", "op": "JUMP"}, "2996": {"op": "JUMPDEST"}, "2997": {"op": "PUSH4", "value": "0x4E487B71"}, "3002": {"op": "PUSH1", "value": "0xE0"}, "3004": {"op": "SHL"}, "3005": {"op": "PUSH1", "value": "0x0"}, "3007": {"op": "MSTORE"}, "3008": {"op": "PUSH1", "value": "0x11"}, "3010": {"op": "PUSH1", "value": "0x4"}, "3012": {"op": "MSTORE"}, "3013": {"op": "PUSH1", "value": "0x24"}, "3015": {"op": "PUSH1", "value": "0x0"}, "3017": {"op": "REVERT"}, "3018": {"op": "JUMPDEST"}, "3019": {"op": "PUSH1", "value": "0x0"}, "3021": {"op": "DUP3"}, "3022": {"op": "DUP3"}, "3023": {"op": "LT"}, "3024": {"op": "ISZERO"}, "3025": {"op": "PUSH2", "value": "0xBDC"}, "3028": {"op": "JUMPI"}, "3029": {"op": "PUSH2", "value": "0xBDC"}, "3032": {"op": "PUSH2", "value": "0xBB4"}, "3035": {"jump": "i", "op": "JUMP"}, "3036": {"op": "JUMPDEST"}, "3037": {"op": "POP"}, "3038": {"op": "SUB"}, "3039": {"op": "SWAP1"}, "3040": {"jump": "o", "op": "JUMP"}, "3041": {"op": "JUMPDEST"}, "3042": {"op": "PUSH1", "value": "0x0"}, "3044": {"op": "DUP3"}, "3045": {"op": "NOT"}, "3046": {"op": "DUP3"}, "3047": {"op": "GT"}, "3048": {"op": "ISZERO"}, "3049": {"op": "PUSH2", "value": "0xBF4"}, "3052": {"op": "JUMPI"}, "3053": {"op": "PUSH2", "value": "0xBF4"}, "3056": {"op": "PUSH2", "value": "0xBB4"}, "3059": {"jump": "i", "op": "JUMP"}, "3060": {"op": "JUMPDEST"}, "3061": {"op": "POP"}, "3062": {"op": "ADD"}, "3063": {"op": "SWAP1"}, "3064": {"jump": "o", "op": "JUMP"}}, "sha1": "80c0a5b4c8198941c22f4e577d1f9303c597d9af", "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./interfaces/IBank.sol\";\n\n/**\n* @title Bank Contract.\n* @author Anthony (fps) https://github.com/fps8k.\n* @dev  The bank itself.\n*       Like a typical bank, users deposit and their balances are\n*       recorded against their addresses, but the ether is deposited\n*       directly into the contract bank.\n*       Withdrawals and Transfers cost some tax.\n*       Deposits don't.\n*/\n\n\ncontract Bank {\n    /**\n    * @dev  Plans that controls the users deposits and withdrawals.\n    *       There are 4 of them, and as the user upgrades these plans,\n    *       there is an increase in the amounts he can deposit and\n    *       withdraw.\n    *       It is also worthy to note that these plans will be upgraded\n    *       one at a time, a Free user cannot move to Ultimate, but\n    *       first move to Basic, Pro, then Ultimate.\n    *       Ultimate has no limits.\n    */\n    enum Plan {\n        Free,\n        Basic,\n        Pro,\n        Ultimate\n    }\n\n    /// @dev Mapping user addresses to their passwords.\n    mapping(address => bytes32) private passwords;\n    /// @dev Mapping the plans to their prices for upgrades.\n    mapping(Plan => uint256) private planPrices;\n    mapping(address => Plan) private userPlan;\n    /// @dev Mapping plans to their limits.\n    mapping(Plan => uint256) private planLimits;\n    /// @dev Mapping address to the amount of ether in their balance.\n    mapping(address => uint256) private balances;\n    /// @dev Maximum ether.\n    uint private stretch = type(uint256).max;\n    // 0x48656c6c6f204272756e6f204d61727300000000000000000000000000000000\n    \n    /**\n    * @dev  Constructor sets the plan limits and the plan prices for the\n    *       deployment of the contract.\n    */\n    constructor() {\n        /// @dev Initialize the `planPrices`.\n        planPrices[Plan.Free] = 0;\n        planPrices[Plan.Basic] = 0.1 ether;\n        planPrices[Plan.Pro] = 0.5 ether;\n        planPrices[Plan.Ultimate] = 1 ether;\n\n        /// @dev Initialize the `planLimits`.\n        planLimits[Plan.Free] = 1 ether;\n        planLimits[Plan.Basic] = 5 ether;\n        planLimits[Plan.Pro] = 10 ether;\n        planLimits[Plan.Ultimate] = stretch;\n    }\n\n    /**\n    * @dev  Creates an account for the caller with password as `password`.\n    *       The password needs to be hashed off-chain for security.\n    *       This will also validate that the msg.sender has no accounts already.\n    *\n    * @param password User's preferred password.\n    */\n    function createAccount(bytes32 password) public {\n        /// @dev Ensure message sender is not a 0 address.\n        require(msg.sender != address(0), \"Call from 0 address.\");\n        /// @dev Ensure caller has no account yet.\n        require(!hasAccount(msg.sender), \"Address has an account.\");\n        /// @dev Ensure the password is indeed 32 in length.\n        require(password.length == 32, \"Invalid password hash.\");\n        /// @dev Create account.\n        passwords[msg.sender] = password;\n        userPlan[msg.sender] = Plan.Free;\n    }\n\n    /**\n    * @dev  Creates an account for `_address` with password as `password`.\n    *       The password needs to be hashed off-chain for security.\n    *       This will also validate that the `_address` has no accounts already.\n    *\n    * @param _address   Address to open account for.\n    * @param password   User's preferred password.\n    */\n    function createAccountFor(address _address, bytes32 password) public {\n        /// @dev Ensure message sender is not a 0 address.\n        require(msg.sender != address(0), \"Call from 0 address.\");\n        /// @dev Ensure address is not a 0 address.\n        require(_address != address(0), \"Call to 0 address.\");\n        /// @dev Ensure address has no account yet.\n        require(!hasAccount(_address), \"Address has an account.\");\n        /// @dev Ensure the password is indeed 32 in length.\n        require(password.length == 32, \"Invalid password hash.\");\n        /// @dev Create account.\n        passwords[_address] = password;\n        userPlan[_address] = Plan.Free;\n    }\n\n    /**\n    * @dev  Returns true if the address already owns an account.\n    *\n    * @param _address Address to check for.\n    *\n    * @return bool.\n    */\n    function hasAccount(address _address) private view returns(bool) {\n        /// @dev Returns true if the address has set a password already.\n        return passwords[_address] != bytes32(0);\n    }\n\n    /**\n    * @dev  Returns the balance of the caller.\n    *       Caller must have an account.\n    *\n    * @return uint256 caller's balance.\n    */\n    function getBalance() public view returns(uint256) {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        return balances[msg.sender];\n    }\n\n    /**\n    * @dev  Changes password from `oldPassword` to new `passWord`.\n    *       Old passwords must match.\n    */\n    function changePassword(bytes32 oldPassword, bytes32 newPassword) public {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        require(passwords[msg.sender] == oldPassword, \"Wrong password.\");\n        require(newPassword.length == 32, \"Invalid password length.\");\n        passwords[msg.sender] = newPassword;\n    }\n\n    /**\n    * @dev Deposits money into the bank.\n    */\n    function deposit(bytes32 password) public payable {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        require(passwords[msg.sender] == password, \"Wrong password.\");\n        require(msg.value != 0, \"Cannot deposit 0\");\n\n        Plan usersPlan = userPlan[msg.sender];\n        uint userLimit = planLimits[usersPlan];\n\n        require(msg.value <= userLimit, \"Cannot deposit more than your limit.\");\n        require(balances[msg.sender] + msg.value <= userLimit, \"You cannot have more than your limit.\");\n\n        balances[msg.sender] += msg.value;\n    }\n\n    /**\n    * @dev Withdraw money from the bank.\n    */\n    function withdraw(uint256 amount, bytes32 password) public payable {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        require(passwords[msg.sender] == password, \"Wrong password.\");\n        require(msg.value != 0, \"Cannot withdraw 0\");\n\n        Plan usersPlan = userPlan[msg.sender];\n        uint userLimit = planLimits[usersPlan];\n\n        require(msg.value <= userLimit, \"Cannot withdraw more than your limit.\");\n        require(balances[msg.sender] >= msg.value, \"You cannot withdraw more than you have.\");\n\n        payable(msg.sender).transfer(amount);\n        balances[msg.sender] -= amount;\n    }\n\n    /**\n    * @dev Upgrade plan to `level`.\n    */\n    function upgrade(uint256 level, bytes32 password) public payable {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        require(passwords[msg.sender] == password, \"Wrong password.\");\n        require(level < 4, \"Not valid level\");\n        \n        Plan usersPlan = userPlan[msg.sender];\n        uint256 price = planPrices[Plan(level)];\n\n        require(usersPlan != Plan.Ultimate, \"You cannot upgrade this. This is max.\");\n        require(uint256(userPlan[msg.sender]) < level, \"You cannot downgrade\");\n\n        require(msg.value >= price, \"Plan price higher than payment.\");\n\n        uint256 balance = msg.value - price;\n\n        userPlan[msg.sender] = Plan(level);\n        payable(msg.sender).transfer(balance);\n    }\n\n    function show() public view returns(Plan) {\n        require(hasAccount(msg.sender), \"Non-Account address.\");\n        return userPlan[msg.sender];\n    }\n}\n", "sourceMap": "452:7066:0:-:0;;;-1:-1:-1;;1531:40:0;;1784:449;;;;;;;;;-1:-1:-1;1878:1:0;1854:21;:25;;;1914:9;1889:22;:34;1956:9;1933:20;:32;2003:7;1975:25;:35;;;1986:13;1854:21;2067;;;;:31;;;;2133:7;2108:22;:32;2173:8;2150:20;:31;2219:7;;2191:25;;;:35;452:7066;;;;;;", "sourcePath": "contracts/Bank.sol", "type": "contract", "deployment": {"address": "0x681d5b2db3D49135a1024850a64cf4566C7Ed532", "chainid": "4", "blockHeight": 10943951}}